{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./ChatBot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [sessions, setSessions] = useState([{\n    id: 1,\n    name: \"Session 1\",\n    messages: []\n  }]);\n  const [currentSessionId, setCurrentSessionId] = useState(1);\n  const [input, setInput] = useState(\"\");\n  const chatBoxRef = useRef(null);\n  const currentSession = sessions.find(s => s.id === currentSessionId);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    const updatedSessions = sessions.map(session => session.id === currentSessionId ? {\n      ...session,\n      messages: [...session.messages, userMessage]\n    } : session);\n    setSessions(updatedSessions);\n    setInput(\"\");\n    try {\n      const res = await fetch(\"https://4cd1e6e50f99.ngrok-free.app/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await res.json();\n      const botMessage = {\n        sender: \"bot\",\n        text: data.reply\n      };\n      setSessions(prevSessions => prevSessions.map(session => session.id === currentSessionId ? {\n        ...session,\n        messages: [...session.messages, botMessage]\n      } : session));\n    } catch {\n      const errorMsg = {\n        sender: \"bot\",\n        text: \"⚠️ Error connecting to the therapist.\"\n      };\n      setSessions(prevSessions => prevSessions.map(session => session.id === currentSessionId ? {\n        ...session,\n        messages: [...session.messages, errorMsg]\n      } : session));\n    }\n  };\n  useEffect(() => {\n    var _chatBoxRef$current;\n    (_chatBoxRef$current = chatBoxRef.current) === null || _chatBoxRef$current === void 0 ? void 0 : _chatBoxRef$current.scrollTo({\n      top: chatBoxRef.current.scrollHeight,\n      behavior: \"smooth\"\n    });\n  }, [sessions]);\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") sendMessage();\n  };\n  const createNewSession = () => {\n    const newId = sessions.length ? sessions[sessions.length - 1].id + 1 : 1;\n    const newSession = {\n      id: newId,\n      name: `Session ${newId}`,\n      messages: []\n    };\n    setSessions([...sessions, newSession]);\n    setCurrentSessionId(newId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-fullscreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"session-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDDC2 Sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sessions.map(session => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: session.id === currentSessionId ? \"active\" : \"\",\n          onClick: () => setCurrentSessionId(session.id),\n          children: session.name\n        }, session.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-session-btn\",\n        onClick: createNewSession,\n        children: \"+ New Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: \"\\uD83E\\uDDE0 AI Therapist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        ref: chatBoxRef,\n        children: currentSession === null || currentSession === void 0 ? void 0 : currentSession.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: handleKeyPress,\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"\\u27A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"Q5IPg1B7n/Jv3hRdBM99M2Qg/do=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatBot","_s","sessions","setSessions","id","name","messages","currentSessionId","setCurrentSessionId","input","setInput","chatBoxRef","currentSession","find","s","sendMessage","trim","userMessage","sender","text","updatedSessions","map","session","res","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","prevSessions","errorMsg","_chatBoxRef$current","current","scrollTo","top","scrollHeight","behavior","handleKeyPress","e","key","createNewSession","newId","length","newSession","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","msg","index","type","value","onChange","target","onKeyDown","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./ChatBot.css\";\r\n\r\nconst ChatBot = () => {\r\n  const [sessions, setSessions] = useState([{ id: 1, name: \"Session 1\", messages: [] }]);\r\n  const [currentSessionId, setCurrentSessionId] = useState(1);\r\n  const [input, setInput] = useState(\"\");\r\n  const chatBoxRef = useRef(null);\r\n\r\n  const currentSession = sessions.find((s) => s.id === currentSessionId);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    const updatedSessions = sessions.map((session) =>\r\n      session.id === currentSessionId\r\n        ? { ...session, messages: [...session.messages, userMessage] }\r\n        : session\r\n    );\r\n    setSessions(updatedSessions);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const res = await fetch(\"https://4cd1e6e50f99.ngrok-free.app/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      const botMessage = { sender: \"bot\", text: data.reply };\r\n\r\n      setSessions((prevSessions) =>\r\n        prevSessions.map((session) =>\r\n          session.id === currentSessionId\r\n            ? { ...session, messages: [...session.messages, botMessage] }\r\n            : session\r\n        )\r\n      );\r\n    } catch {\r\n      const errorMsg = { sender: \"bot\", text: \"⚠️ Error connecting to the therapist.\" };\r\n\r\n      setSessions((prevSessions) =>\r\n        prevSessions.map((session) =>\r\n          session.id === currentSessionId\r\n            ? { ...session, messages: [...session.messages, errorMsg] }\r\n            : session\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    chatBoxRef.current?.scrollTo({\r\n      top: chatBoxRef.current.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [sessions]);\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") sendMessage();\r\n  };\r\n\r\n  const createNewSession = () => {\r\n    const newId = sessions.length ? sessions[sessions.length - 1].id + 1 : 1;\r\n    const newSession = { id: newId, name: `Session ${newId}`, messages: [] };\r\n    setSessions([...sessions, newSession]);\r\n    setCurrentSessionId(newId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-fullscreen\">\r\n      {/* Session Manager */}\r\n      <aside className=\"session-panel\">\r\n        <h2>🗂 Sessions</h2>\r\n        <ul>\r\n          {sessions.map((session) => (\r\n            <li\r\n              key={session.id}\r\n              className={session.id === currentSessionId ? \"active\" : \"\"}\r\n              onClick={() => setCurrentSessionId(session.id)}\r\n            >\r\n              {session.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button className=\"new-session-btn\" onClick={createNewSession}>+ New Session</button>\r\n      </aside>\r\n\r\n      {/* Chat Area */}\r\n      <div className=\"chatbot-container\">\r\n        <header className=\"chat-header\">🧠 AI Therapist</header>\r\n        <div className=\"chat-box\" ref={chatBoxRef}>\r\n          {currentSession?.messages.map((msg, index) => (\r\n            <div key={index} className={`chat-message ${msg.sender}`}>\r\n              <div className=\"chat-bubble\">{msg.text}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-input-area\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={handleKeyPress}\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          <button onClick={sendMessage}>➤</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
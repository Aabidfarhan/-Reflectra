{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Sidebar from './Sidebar';\nimport BookTherapistPage from './BookTherapistPage';\nimport SessionSummaryPage from './SessionSummaryPage';\nimport ChatInput from './ChatInput';\nimport TaskPanel from './TaskPanel';\nimport JournalPanel from './JournalPanel';\nimport JournalsPage from './JournalsPage';\nimport DarkModeToggle from './DarkModeToggle';\nimport '../styles/ChatBot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [sessions, setSessions] = useState([{\n    id: 1,\n    name: 'Session 1',\n    messages: []\n  }]);\n  const [currentSessionId, setCurrentSessionId] = useState(1);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [mode, setMode] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [view, setView] = useState('chat');\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [voices, setVoices] = useState([]);\n  const chatBoxRef = useRef(null);\n  const currentSession = sessions.find(s => s.id === currentSessionId);\n  useEffect(() => {\n    var _chatBoxRef$current;\n    (_chatBoxRef$current = chatBoxRef.current) === null || _chatBoxRef$current === void 0 ? void 0 : _chatBoxRef$current.scrollTo({\n      top: chatBoxRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [currentSession === null || currentSession === void 0 ? void 0 : currentSession.messages, typing]);\n\n  // Load voices when component mounts\n  useEffect(() => {\n    const loadVoices = () => {\n      const availableVoices = window.speechSynthesis.getVoices();\n      setVoices(availableVoices);\n    };\n    loadVoices();\n    window.speechSynthesis.onvoiceschanged = loadVoices;\n  }, []);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'me',\n      text: input\n    };\n    setInput('');\n    setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n      ...s,\n      messages: [...s.messages, userMessage]\n    } : s));\n    if (!chatStarted) setChatStarted(true);\n    setTyping(true);\n    try {\n      const response = await fetch('https://5ef2e9bd1b39.ngrok-free.app/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input,\n          mode\n        })\n      });\n      if (!response.ok) throw new Error(\"Server Error\");\n      const data = await response.json();\n      const aiMessage = {\n        sender: 'ai',\n        text: data.reply\n      };\n      setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n        ...s,\n        messages: [...s.messages, aiMessage]\n      } : s));\n    } catch (err) {\n      const fallback = {\n        sender: 'ai',\n        text: \"⚠️ Sorry, I couldn't connect to the server. Try again later.\"\n      };\n      setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n        ...s,\n        messages: [...s.messages, fallback]\n      } : s));\n    }\n    setTyping(false);\n  };\n  const speakText = text => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'en-US';\n\n    // Select a female voice from available voices\n    const preferredVoice = voices.find(voice => voice.name.toLowerCase().includes('female') || voice.name.toLowerCase().includes('samantha') || voice.name.toLowerCase().includes('zira') || voice.name.toLowerCase().includes('google us english') || voice.name.toLowerCase().includes('english (united states)'));\n    if (preferredVoice) {\n      utterance.voice = preferredVoice;\n    }\n    speechSynthesis.speak(utterance);\n  };\n  const renderMessagesWithAudio = () => {\n    return currentSession === null || currentSession === void 0 ? void 0 : currentSession.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${msg.sender}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bubble\",\n        children: msg.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), msg.sender === 'ai' && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"speak-button\",\n        onClick: () => speakText(msg.text),\n        title: \"Read Aloud\",\n        children: \"\\uD83D\\uDD0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${darkMode ? 'dark' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onSelect: val => {\n        setView(val);\n        setSelectedTask(null);\n      },\n      selected: view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `sidebar-toggle ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`,\n      onClick: () => setSidebarOpen(!sidebarOpen),\n      children: sidebarOpen ? '⬅️' : '➡️'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-content ${sidebarOpen ? '' : 'expanded'}`,\n      children: [/*#__PURE__*/_jsxDEV(DarkModeToggle, {\n        darkMode: darkMode,\n        setDarkMode: setDarkMode,\n        sidebarOpen: sidebarOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), view === 'chat' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          ref: chatBoxRef,\n          children: [renderMessagesWithAudio(), typing && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message ai\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bubble\",\n              children: \"Typing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          input: input,\n          setInput: setInput,\n          onSend: sendMessage,\n          setMode: setMode,\n          onVoiceInput: text => {\n            setInput(text); // ⛔ Don't auto-send after voice input\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), view === 'tasks' && /*#__PURE__*/_jsxDEV(TaskPanel, {\n        mode: mode,\n        onClose: () => setView('chat'),\n        onTaskClick: task => setSelectedTask(task)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), view === 'journals' && !selectedTask && /*#__PURE__*/_jsxDEV(JournalsPage, {\n        onNew: () => setView('newJournal')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), view === 'journals' && selectedTask && /*#__PURE__*/_jsxDEV(JournalPanel, {\n        task: selectedTask,\n        onClose: () => setSelectedTask(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), view === 'newJournal' && /*#__PURE__*/_jsxDEV(JournalPanel, {\n        task: {\n          title: ''\n        },\n        onClose: () => setView('journals')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), view === 'bookTherapist' && /*#__PURE__*/_jsxDEV(BookTherapistPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 38\n      }, this), view === 'sessionSummary' && /*#__PURE__*/_jsxDEV(SessionSummaryPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"OJtv5sPpdFbd2+FKUyvK0/ORl2Y=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Sidebar","BookTherapistPage","SessionSummaryPage","ChatInput","TaskPanel","JournalPanel","JournalsPage","DarkModeToggle","jsxDEV","_jsxDEV","ChatBot","_s","input","setInput","sessions","setSessions","id","name","messages","currentSessionId","setCurrentSessionId","chatStarted","setChatStarted","mode","setMode","darkMode","setDarkMode","typing","setTyping","selectedTask","setSelectedTask","view","setView","sidebarOpen","setSidebarOpen","voices","setVoices","chatBoxRef","currentSession","find","s","_chatBoxRef$current","current","scrollTo","top","scrollHeight","behavior","loadVoices","availableVoices","window","speechSynthesis","getVoices","onvoiceschanged","sendMessage","trim","userMessage","sender","text","prev","map","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","aiMessage","reply","err","fallback","speakText","utterance","SpeechSynthesisUtterance","lang","preferredVoice","voice","toLowerCase","includes","speak","renderMessagesWithAudio","msg","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","onSelect","val","selected","ref","onSend","onVoiceInput","onClose","onTaskClick","task","onNew","_c","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport BookTherapistPage from './BookTherapistPage';\r\nimport SessionSummaryPage from './SessionSummaryPage';\r\nimport ChatInput from './ChatInput';\r\nimport TaskPanel from './TaskPanel';\r\nimport JournalPanel from './JournalPanel';\r\nimport JournalsPage from './JournalsPage';\r\nimport DarkModeToggle from './DarkModeToggle';\r\nimport '../styles/ChatBot.css';\r\n\r\nconst ChatBot = () => {\r\n  const [input, setInput] = useState('');\r\n  const [sessions, setSessions] = useState([{ id: 1, name: 'Session 1', messages: [] }]);\r\n  const [currentSessionId, setCurrentSessionId] = useState(1);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [view, setView] = useState('chat');\r\n  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n  const [voices, setVoices] = useState([]);\r\n\r\n  const chatBoxRef = useRef(null);\r\n  const currentSession = sessions.find((s) => s.id === currentSessionId);\r\n\r\n  useEffect(() => {\r\n    chatBoxRef.current?.scrollTo({ top: chatBoxRef.current.scrollHeight, behavior: 'smooth' });\r\n  }, [currentSession?.messages, typing]);\r\n\r\n  // Load voices when component mounts\r\n  useEffect(() => {\r\n    const loadVoices = () => {\r\n      const availableVoices = window.speechSynthesis.getVoices();\r\n      setVoices(availableVoices);\r\n    };\r\n\r\n    loadVoices();\r\n    window.speechSynthesis.onvoiceschanged = loadVoices;\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: 'me', text: input };\r\n    setInput('');\r\n    setSessions((prev) =>\r\n      prev.map((s) =>\r\n        s.id === currentSessionId ? { ...s, messages: [...s.messages, userMessage] } : s\r\n      )\r\n    );\r\n\r\n    if (!chatStarted) setChatStarted(true);\r\n    setTyping(true);\r\n\r\n    try {\r\n      const response = await fetch('https://5ef2e9bd1b39.ngrok-free.app/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: input, mode }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Server Error\");\r\n\r\n      const data = await response.json();\r\n\r\n      const aiMessage = { sender: 'ai', text: data.reply };\r\n      setSessions((prev) =>\r\n        prev.map((s) =>\r\n          s.id === currentSessionId ? { ...s, messages: [...s.messages, aiMessage] } : s\r\n        )\r\n      );\r\n    } catch (err) {\r\n      const fallback = {\r\n        sender: 'ai',\r\n        text: \"⚠️ Sorry, I couldn't connect to the server. Try again later.\",\r\n      };\r\n      setSessions((prev) =>\r\n        prev.map((s) =>\r\n          s.id === currentSessionId ? { ...s, messages: [...s.messages, fallback] } : s\r\n        )\r\n      );\r\n    }\r\n\r\n    setTyping(false);\r\n  };\r\n\r\n  const speakText = (text) => {\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    utterance.lang = 'en-US';\r\n\r\n    // Select a female voice from available voices\r\n    const preferredVoice = voices.find(\r\n      (voice) =>\r\n        voice.name.toLowerCase().includes('female') ||\r\n        voice.name.toLowerCase().includes('samantha') ||\r\n        voice.name.toLowerCase().includes('zira') ||\r\n        voice.name.toLowerCase().includes('google us english') ||\r\n        voice.name.toLowerCase().includes('english (united states)')\r\n    );\r\n\r\n    if (preferredVoice) {\r\n      utterance.voice = preferredVoice;\r\n    }\r\n\r\n    speechSynthesis.speak(utterance);\r\n  };\r\n\r\n  const renderMessagesWithAudio = () => {\r\n    return currentSession?.messages.map((msg, index) => (\r\n      <div key={index} className={`message ${msg.sender}`}>\r\n        <div className=\"bubble\">{msg.text}</div>\r\n        {msg.sender === 'ai' && (\r\n          <button\r\n            className=\"speak-button\"\r\n            onClick={() => speakText(msg.text)}\r\n            title=\"Read Aloud\"\r\n          >\r\n            🔊\r\n          </button>\r\n        )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className={`chatbot-container ${darkMode ? 'dark' : ''}`}>\r\n      <Sidebar\r\n        onSelect={(val) => {\r\n          setView(val);\r\n          setSelectedTask(null);\r\n        }}\r\n        selected={view}\r\n      />\r\n\r\n      <button\r\n        className={`sidebar-toggle ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`}\r\n        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n      >\r\n        {sidebarOpen ? '⬅️' : '➡️'}\r\n      </button>\r\n\r\n      <div className={`main-content ${sidebarOpen ? '' : 'expanded'}`}>\r\n        <DarkModeToggle\r\n          darkMode={darkMode}\r\n          setDarkMode={setDarkMode}\r\n          sidebarOpen={sidebarOpen}\r\n        />\r\n\r\n        {view === 'chat' && (\r\n          <div className=\"chat-area\">\r\n            <div className=\"chat-box\" ref={chatBoxRef}>\r\n              {renderMessagesWithAudio()}\r\n              {typing && (\r\n                <div className=\"message ai\">\r\n                  <div className=\"bubble\">Typing...</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <ChatInput\r\n              input={input}\r\n              setInput={setInput}\r\n              onSend={sendMessage}\r\n              setMode={setMode}\r\n              onVoiceInput={(text) => {\r\n                setInput(text); // ⛔ Don't auto-send after voice input\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {view === 'tasks' && (\r\n          <TaskPanel\r\n            mode={mode}\r\n            onClose={() => setView('chat')}\r\n            onTaskClick={(task) => setSelectedTask(task)}\r\n          />\r\n        )}\r\n\r\n        {view === 'journals' && !selectedTask && (\r\n          <JournalsPage onNew={() => setView('newJournal')} />\r\n        )}\r\n\r\n        {view === 'journals' && selectedTask && (\r\n          <JournalPanel task={selectedTask} onClose={() => setSelectedTask(null)} />\r\n        )}\r\n\r\n        {view === 'newJournal' && (\r\n          <JournalPanel task={{ title: '' }} onClose={() => setView('journals')} />\r\n        )}\r\n\r\n        {view === 'bookTherapist' && <BookTherapistPage />}\r\n        {view === 'sessionSummary' && <SessionSummaryPage />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\TaskPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/TaskPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultTasks = {\n  guided_journaling: [{\n    title: 'Write Your Feelings',\n    time: 'Daily at 9:00am'\n  }, {\n    title: 'Reflect on Wins',\n    time: 'Every Evening'\n  }],\n  distortion_detection: [{\n    title: 'Identify Cognitive Distortions',\n    time: 'Every Monday'\n  }],\n  thought_deframing: [{\n    title: 'Challenge Negative Thoughts',\n    time: 'Weekly Review'\n  }],\n  affirmation_separator: [{\n    title: 'Separate Fact from Feeling',\n    time: 'Every Saturday'\n  }]\n};\nconst TaskPanel = ({\n  mode,\n  onClose,\n  onTaskClick\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    time: ''\n  });\n  const [showForm, setShowForm] = useState(false);\n  useEffect(() => {\n    setTasks(defaultTasks[mode] || []);\n  }, [mode]);\n  const handleAddTask = () => {\n    if (newTask.title && newTask.time) {\n      setTasks(prev => [...prev, newTask]);\n      setNewTask({\n        title: '',\n        time: ''\n      });\n      setShowForm(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-panel-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"task-title\",\n          children: [\"Tasks for \", mode.replace(/_/g, ' ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          style: {\n            background: 'transparent',\n            color: 'hotpink',\n            border: 'none',\n            fontSize: '20px',\n            cursor: 'pointer'\n          },\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-task-btn\",\n        onClick: () => setShowForm(!showForm),\n        children: \"+ Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Task Title\",\n          value: newTask.title,\n          onChange: e => setNewTask({\n            ...newTask,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newTask.time,\n          onChange: e => setNewTask({\n            ...newTask,\n            time: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Daily at 9:00am\",\n            children: \"Daily at 9:00am\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Every Evening\",\n            children: \"Every Evening\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Every Morning\",\n            children: \"Every Morning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Every Monday\",\n            children: \"Every Monday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Every Saturday\",\n            children: \"Every Saturday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Weekly Review\",\n            children: \"Weekly Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTask,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-cards\",\n        children: tasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-card\",\n          onClick: () => onTaskClick(task),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPanel, \"oSWpjn5oi0TzBkAtlwmu22CnoqQ=\");\n_c = TaskPanel;\nexport default TaskPanel;\nvar _c;\n$RefreshReg$(_c, \"TaskPanel\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","defaultTasks","guided_journaling","title","time","distortion_detection","thought_deframing","affirmation_separator","TaskPanel","mode","onClose","onTaskClick","_s","tasks","setTasks","newTask","setNewTask","showForm","setShowForm","handleAddTask","prev","className","children","style","display","justifyContent","replace","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","color","border","fontSize","cursor","placeholder","value","onChange","e","target","map","task","idx","_c","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/TaskPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/TaskPanel.css';\r\n\r\nconst defaultTasks = {\r\n  guided_journaling: [\r\n    { title: 'Write Your Feelings', time: 'Daily at 9:00am' },\r\n    { title: 'Reflect on Wins', time: 'Every Evening' },\r\n  ],\r\n  distortion_detection: [\r\n    { title: 'Identify Cognitive Distortions', time: 'Every Monday' },\r\n  ],\r\n  thought_deframing: [\r\n    { title: 'Challenge Negative Thoughts', time: 'Weekly Review' },\r\n  ],\r\n  affirmation_separator: [\r\n    { title: 'Separate Fact from Feeling', time: 'Every Saturday' },\r\n  ],\r\n};\r\n\r\nconst TaskPanel = ({ mode, onClose, onTaskClick }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState({ title: '', time: '' });\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTasks(defaultTasks[mode] || []);\r\n  }, [mode]);\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.title && newTask.time) {\r\n      setTasks((prev) => [...prev, newTask]);\r\n      setNewTask({ title: '', time: '' });\r\n      setShowForm(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-panel-overlay\">\r\n      <div className=\"task-panel\">\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <h2 className=\"task-title\">Tasks for {mode.replace(/_/g, ' ')}</h2>\r\n          <button onClick={onClose} style={{ background: 'transparent', color: 'hotpink', border: 'none', fontSize: '20px', cursor: 'pointer' }}>âœ–</button>\r\n        </div>\r\n\r\n        <button className=\"add-task-btn\" onClick={() => setShowForm(!showForm)}>\r\n          + Add Task\r\n        </button>\r\n\r\n        {showForm && (\r\n          <div className=\"task-form\">\r\n            <input\r\n              placeholder=\"Task Title\"\r\n              value={newTask.title}\r\n              onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n            />\r\n            <select\r\n  value={newTask.time}\r\n  onChange={(e) => setNewTask({ ...newTask, time: e.target.value })}\r\n>\r\n  <option value=\"\">Select Time</option>\r\n  <option value=\"Daily at 9:00am\">Daily at 9:00am</option>\r\n  <option value=\"Every Evening\">Every Evening</option>\r\n  <option value=\"Every Morning\">Every Morning</option>\r\n  <option value=\"Every Monday\">Every Monday</option>\r\n  <option value=\"Every Saturday\">Every Saturday</option>\r\n  <option value=\"Weekly Review\">Weekly Review</option>\r\n</select>\r\n\r\n            <button onClick={handleAddTask}>Save</button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"task-cards\">\r\n          {tasks.map((task, idx) => (\r\n            <div\r\n              className=\"task-card\"\r\n              key={idx}\r\n              onClick={() => onTaskClick(task)}\r\n              style={{ cursor: 'pointer' }}\r\n            >\r\n              <h4>{task.title}</h4>\r\n              <p>{task.time}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\TaskPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/TaskPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultTasks = {\n  guided_journaling: [{\n    title: 'Write Your Feelings',\n    time: 'Daily at 9:00am'\n  }, {\n    title: 'Reflect on Wins',\n    time: 'Every Evening'\n  }],\n  distortion_detection: [{\n    title: 'Identify Cognitive Distortions',\n    time: 'Every Monday'\n  }],\n  thought_deframing: [],\n  affirmation_separator: []\n};\nconst TaskPanel = ({\n  mode,\n  onClose,\n  onTaskClick\n}) => {\n  _s();\n  const [tasks, setTasks] = useState(defaultTasks[mode] || []);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    time: ''\n  });\n  const [showForm, setShowForm] = useState(false);\n  const handleAddTask = () => {\n    if (newTask.title && newTask.time) {\n      setTasks(prev => [...prev, newTask]);\n      setNewTask({\n        title: '',\n        time: ''\n      });\n      setShowForm(false);\n    }\n  };\n  if (!mode || !mode.includes('task')) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-panel-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"task-title\",\n          children: [\"Tasks for \", mode.replace(/_/g, ' ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          style: {\n            background: 'transparent',\n            color: 'hotpink',\n            border: 'none',\n            fontSize: '20px',\n            cursor: 'pointer'\n          },\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-task-btn\",\n        onClick: () => setShowForm(!showForm),\n        children: \"+ Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Task Title\",\n          value: newTask.title,\n          onChange: e => setNewTask({\n            ...newTask,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Time (e.g. Daily at 9am)\",\n          value: newTask.time,\n          onChange: e => setNewTask({\n            ...newTask,\n            time: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTask,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-cards\",\n        children: tasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-card\",\n          onClick: () => onTaskClick(task),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPanel, \"+L1Bl3kZr4VC4Nz71FfGDVl/40w=\");\n_c = TaskPanel;\nexport default TaskPanel;\nvar _c;\n$RefreshReg$(_c, \"TaskPanel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","defaultTasks","guided_journaling","title","time","distortion_detection","thought_deframing","affirmation_separator","TaskPanel","mode","onClose","onTaskClick","_s","tasks","setTasks","newTask","setNewTask","showForm","setShowForm","handleAddTask","prev","includes","className","children","style","display","justifyContent","replace","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","color","border","fontSize","cursor","placeholder","value","onChange","e","target","map","task","idx","_c","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/TaskPanel.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/TaskPanel.css';\r\n\r\nconst defaultTasks = {\r\n  guided_journaling: [\r\n    { title: 'Write Your Feelings', time: 'Daily at 9:00am' },\r\n    { title: 'Reflect on Wins', time: 'Every Evening' },\r\n  ],\r\n  distortion_detection: [\r\n    { title: 'Identify Cognitive Distortions', time: 'Every Monday' },\r\n  ],\r\n  thought_deframing: [],\r\n  affirmation_separator: [],\r\n};\r\n\r\nconst TaskPanel = ({ mode, onClose, onTaskClick }) => {\r\n  const [tasks, setTasks] = useState(defaultTasks[mode] || []);\r\n  const [newTask, setNewTask] = useState({ title: '', time: '' });\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.title && newTask.time) {\r\n      setTasks((prev) => [...prev, newTask]);\r\n      setNewTask({ title: '', time: '' });\r\n      setShowForm(false);\r\n    }\r\n  };\r\n\r\n  if (!mode || !mode.includes('task')) return null;\r\n\r\n  return (\r\n    <div className=\"task-panel-overlay\">\r\n      <div className=\"task-panel\">\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <h2 className=\"task-title\">Tasks for {mode.replace(/_/g, ' ')}</h2>\r\n          <button onClick={onClose} style={{ background: 'transparent', color: 'hotpink', border: 'none', fontSize: '20px', cursor: 'pointer' }}>âœ–</button>\r\n        </div>\r\n\r\n        <button className=\"add-task-btn\" onClick={() => setShowForm(!showForm)}>\r\n          + Add Task\r\n        </button>\r\n\r\n        {showForm && (\r\n          <div className=\"task-form\">\r\n            <input\r\n              placeholder=\"Task Title\"\r\n              value={newTask.title}\r\n              onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n            />\r\n            <input\r\n              placeholder=\"Time (e.g. Daily at 9am)\"\r\n              value={newTask.time}\r\n              onChange={(e) => setNewTask({ ...newTask, time: e.target.value })}\r\n            />\r\n            <button onClick={handleAddTask}>Save</button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"task-cards\">\r\n          {tasks.map((task, idx) => (\r\n            <div\r\n              className=\"task-card\"\r\n              key={idx}\r\n              onClick={() => onTaskClick(task)}\r\n              style={{ cursor: 'pointer' }}\r\n            >\r\n              <h4>{task.title}</h4>\r\n              <p>{task.time}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,GAAG;EACnBC,iBAAiB,EAAE,CACjB;IAAEC,KAAK,EAAE,qBAAqB;IAAEC,IAAI,EAAE;EAAkB,CAAC,EACzD;IAAED,KAAK,EAAE,iBAAiB;IAAEC,IAAI,EAAE;EAAgB,CAAC,CACpD;EACDC,oBAAoB,EAAE,CACpB;IAAEF,KAAK,EAAE,gCAAgC;IAAEC,IAAI,EAAE;EAAe,CAAC,CAClE;EACDE,iBAAiB,EAAE,EAAE;EACrBC,qBAAqB,EAAE;AACzB,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAACG,YAAY,CAACQ,IAAI,CAAC,IAAI,EAAE,CAAC;EAC5D,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC;IAAEK,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAC/D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMqB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIJ,OAAO,CAACZ,KAAK,IAAIY,OAAO,CAACX,IAAI,EAAE;MACjCU,QAAQ,CAAEM,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEL,OAAO,CAAC,CAAC;MACtCC,UAAU,CAAC;QAAEb,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC,CAAC;MACnCc,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,IAAI,CAACT,IAAI,IAAI,CAACA,IAAI,CAACY,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,IAAI;EAEhD,oBACErB,OAAA;IAAKsB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjCvB,OAAA;MAAKsB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBvB,OAAA;QAAKwB,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE;QAAgB,CAAE;QAAAH,QAAA,gBAC/DvB,OAAA;UAAIsB,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAC,YAAU,EAACd,IAAI,CAACkB,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnE/B,OAAA;UAAQgC,OAAO,EAAEtB,OAAQ;UAACc,KAAK,EAAE;YAAES,UAAU,EAAE,aAAa;YAAEC,KAAK,EAAE,SAAS;YAAEC,MAAM,EAAE,MAAM;YAAEC,QAAQ,EAAE,MAAM;YAAEC,MAAM,EAAE;UAAU,CAAE;UAAAd,QAAA,EAAC;QAAC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9I,CAAC,eAEN/B,OAAA;QAAQsB,SAAS,EAAC,cAAc;QAACU,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAAC,CAACD,QAAQ,CAAE;QAAAM,QAAA,EAAC;MAExE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERd,QAAQ,iBACPjB,OAAA;QAAKsB,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBvB,OAAA;UACEsC,WAAW,EAAC,YAAY;UACxBC,KAAK,EAAExB,OAAO,CAACZ,KAAM;UACrBqC,QAAQ,EAAGC,CAAC,IAAKzB,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEZ,KAAK,EAAEsC,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC,eACF/B,OAAA;UACEsC,WAAW,EAAC,0BAA0B;UACtCC,KAAK,EAAExB,OAAO,CAACX,IAAK;UACpBoC,QAAQ,EAAGC,CAAC,IAAKzB,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEX,IAAI,EAAEqC,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC,eACF/B,OAAA;UAAQgC,OAAO,EAAEb,aAAc;UAAAI,QAAA,EAAC;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CACN,eAED/B,OAAA;QAAKsB,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBV,KAAK,CAAC8B,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACnB7C,OAAA;UACEsB,SAAS,EAAC,WAAW;UAErBU,OAAO,EAAEA,CAAA,KAAMrB,WAAW,CAACiC,IAAI,CAAE;UACjCpB,KAAK,EAAE;YAAEa,MAAM,EAAE;UAAU,CAAE;UAAAd,QAAA,gBAE7BvB,OAAA;YAAAuB,QAAA,EAAKqB,IAAI,CAACzC;UAAK;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrB/B,OAAA;YAAAuB,QAAA,EAAIqB,IAAI,CAACxC;UAAI;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GALbc,GAAG;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAML,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA3DIJ,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AA6Df,eAAeA,SAAS;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
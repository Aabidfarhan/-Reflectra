{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Sidebar from './Sidebar';\nimport BookTherapistPage from './BookTherapistPage';\nimport SessionSummaryPage from './SessionSummaryPage';\nimport ChatInput from './ChatInput';\nimport TaskPanel from './TaskPanel';\nimport JournalPanel from './JournalPanel';\nimport JournalsPage from './JournalsPage';\nimport DarkModeToggle from './DarkModeToggle';\nimport '../styles/ChatBot.css';\n\n// Voice Message Bubble Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageBubble = ({\n  msg,\n  voice\n}) => {\n  const speak = () => {\n    const utterance = new SpeechSynthesisUtterance(msg.text);\n    utterance.lang = 'en-IN';\n    if (voice) utterance.voice = voice;\n    speechSynthesis.speak(utterance);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${msg.sender}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bubble-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bubble\",\n        children: msg.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), msg.sender === 'ai' && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"speak-button\",\n        onClick: speak,\n        title: \"Read in Microsoft Heera\",\n        children: \"\\uD83D\\uDD0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageBubble;\nconst ChatBot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [sessions, setSessions] = useState([{\n    id: 1,\n    name: 'Session 1',\n    messages: []\n  }]);\n  const [currentSessionId, setCurrentSessionId] = useState(1);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [mode, setMode] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [view, setView] = useState('chat');\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [voice, setVoice] = useState(null);\n  const chatBoxRef = useRef(null);\n  const currentSession = sessions.find(s => s.id === currentSessionId);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    var _chatBoxRef$current;\n    (_chatBoxRef$current = chatBoxRef.current) === null || _chatBoxRef$current === void 0 ? void 0 : _chatBoxRef$current.scrollTo({\n      top: chatBoxRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [currentSession === null || currentSession === void 0 ? void 0 : currentSession.messages, typing]);\n\n  // Load Microsoft Heera voice\n  useEffect(() => {\n    const loadVoice = () => {\n      const allVoices = speechSynthesis.getVoices();\n      const heera = allVoices.find(v => v.name.toLowerCase().includes('heera') || v.name.toLowerCase().includes('microsoft heera'));\n      if (heera) setVoice(heera);\n    };\n    loadVoice();\n    speechSynthesis.onvoiceschanged = loadVoice;\n  }, []);\n\n  // Map mode to different endpoints\n  const modeToUrlMap = {\n    guided_journaling: 'https://your-guided-url.ngrok-free.app/chat',\n    distortion_detection: 'https://your-distortion-url.ngrok-free.app/chat',\n    thought_deframing: 'https://your-deframe-url.ngrok-free.app/chat',\n    affirmation_separator: 'https://70d3d465bc0e.ngrok-free.app/affirmation',\n    default: 'https://5ef2e9bd1b39.ngrok-free.app/chat'\n  };\n\n  // Send message logic\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'me',\n      text: input\n    };\n    setInput('');\n    setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n      ...s,\n      messages: [...s.messages, userMessage]\n    } : s));\n    if (!chatStarted) setChatStarted(true);\n    setTyping(true);\n    const endpoint = modeToUrlMap[mode] || modeToUrlMap['default'];\n    try {\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input,\n          mode\n        })\n      });\n      if (!response.ok) throw new Error('Server Error');\n      const data = await response.json();\n      const aiMessage = {\n        sender: 'ai',\n        text: data.reply\n      };\n      setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n        ...s,\n        messages: [...s.messages, aiMessage]\n      } : s));\n    } catch {\n      const fallback = {\n        sender: 'ai',\n        text: '⚠️ Sorry, I couldn\\'t connect to the server. Try again later.'\n      };\n      setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n        ...s,\n        messages: [...s.messages, fallback]\n      } : s));\n    }\n    setTyping(false);\n  };\n\n  // Render messages\n  const renderMessages = () => currentSession === null || currentSession === void 0 ? void 0 : currentSession.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n    msg: msg,\n    voice: voice\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${darkMode ? 'dark' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onSelect: val => {\n        setView(val);\n        setSelectedTask(null);\n      },\n      selected: view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `sidebar-toggle ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`,\n      onClick: () => setSidebarOpen(!sidebarOpen),\n      children: sidebarOpen ? '⬅️' : '➡️'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-content ${sidebarOpen ? '' : 'expanded'}`,\n      children: [/*#__PURE__*/_jsxDEV(DarkModeToggle, {\n        darkMode: darkMode,\n        setDarkMode: setDarkMode,\n        sidebarOpen: sidebarOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), view === 'chat' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          ref: chatBoxRef,\n          children: [renderMessages(), typing && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message ai\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bubble\",\n              children: \"Typing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          input: input,\n          setInput: setInput,\n          onSend: sendMessage,\n          setMode: setMode,\n          onVoiceInput: text => setInput(text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), view === 'tasks' && /*#__PURE__*/_jsxDEV(TaskPanel, {\n        mode: mode,\n        onClose: () => setView('chat'),\n        onTaskClick: task => setSelectedTask(task)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), view === 'journals' && !selectedTask && /*#__PURE__*/_jsxDEV(JournalsPage, {\n        onNew: () => setView('newJournal')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), view === 'journals' && selectedTask && /*#__PURE__*/_jsxDEV(JournalPanel, {\n        task: selectedTask,\n        onClose: () => setSelectedTask(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), view === 'newJournal' && /*#__PURE__*/_jsxDEV(JournalPanel, {\n        task: {\n          title: ''\n        },\n        onClose: () => setView('journals')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), view === 'bookTherapist' && /*#__PURE__*/_jsxDEV(BookTherapistPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 38\n      }, this), view === 'sessionSummary' && /*#__PURE__*/_jsxDEV(SessionSummaryPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"bHqMpQL4XeDw6Sc9nAIONxVFXik=\");\n_c2 = ChatBot;\nexport default ChatBot;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Sidebar","BookTherapistPage","SessionSummaryPage","ChatInput","TaskPanel","JournalPanel","JournalsPage","DarkModeToggle","jsxDEV","_jsxDEV","MessageBubble","msg","voice","speak","utterance","SpeechSynthesisUtterance","text","lang","speechSynthesis","className","sender","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","_c","ChatBot","_s","input","setInput","sessions","setSessions","id","name","messages","currentSessionId","setCurrentSessionId","chatStarted","setChatStarted","mode","setMode","darkMode","setDarkMode","typing","setTyping","selectedTask","setSelectedTask","view","setView","sidebarOpen","setSidebarOpen","setVoice","chatBoxRef","currentSession","find","s","_chatBoxRef$current","current","scrollTo","top","scrollHeight","behavior","loadVoice","allVoices","getVoices","heera","v","toLowerCase","includes","onvoiceschanged","modeToUrlMap","guided_journaling","distortion_detection","thought_deframing","affirmation_separator","default","sendMessage","trim","userMessage","prev","map","endpoint","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","aiMessage","reply","fallback","renderMessages","index","onSelect","val","selected","ref","onSend","onVoiceInput","onClose","onTaskClick","task","onNew","_c2","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport BookTherapistPage from './BookTherapistPage';\r\nimport SessionSummaryPage from './SessionSummaryPage';\r\nimport ChatInput from './ChatInput';\r\nimport TaskPanel from './TaskPanel';\r\nimport JournalPanel from './JournalPanel';\r\nimport JournalsPage from './JournalsPage';\r\nimport DarkModeToggle from './DarkModeToggle';\r\nimport '../styles/ChatBot.css';\r\n\r\n// Voice Message Bubble Component\r\nconst MessageBubble = ({ msg, voice }) => {\r\n  const speak = () => {\r\n    const utterance = new SpeechSynthesisUtterance(msg.text);\r\n    utterance.lang = 'en-IN';\r\n    if (voice) utterance.voice = voice;\r\n    speechSynthesis.speak(utterance);\r\n  };\r\n\r\n  return (\r\n    <div className={`message ${msg.sender}`}>\r\n      <div className=\"bubble-wrapper\">\r\n        <div className=\"bubble\">{msg.text}</div>\r\n        {msg.sender === 'ai' && (\r\n          <button\r\n            className=\"speak-button\"\r\n            onClick={speak}\r\n            title=\"Read in Microsoft Heera\"\r\n          >\r\n            🔊\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChatBot = () => {\r\n  const [input, setInput] = useState('');\r\n  const [sessions, setSessions] = useState([{ id: 1, name: 'Session 1', messages: [] }]);\r\n  const [currentSessionId, setCurrentSessionId] = useState(1);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [view, setView] = useState('chat');\r\n  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n  const [voice, setVoice] = useState(null);\r\n\r\n  const chatBoxRef = useRef(null);\r\n  const currentSession = sessions.find((s) => s.id === currentSessionId);\r\n\r\n  // Scroll to bottom on new message\r\n  useEffect(() => {\r\n    chatBoxRef.current?.scrollTo({ top: chatBoxRef.current.scrollHeight, behavior: 'smooth' });\r\n  }, [currentSession?.messages, typing]);\r\n\r\n  // Load Microsoft Heera voice\r\n  useEffect(() => {\r\n    const loadVoice = () => {\r\n      const allVoices = speechSynthesis.getVoices();\r\n      const heera = allVoices.find((v) =>\r\n        v.name.toLowerCase().includes('heera') || v.name.toLowerCase().includes('microsoft heera')\r\n      );\r\n      if (heera) setVoice(heera);\r\n    };\r\n\r\n    loadVoice();\r\n    speechSynthesis.onvoiceschanged = loadVoice;\r\n  }, []);\r\n\r\n  // Map mode to different endpoints\r\n  const modeToUrlMap = {\r\n    guided_journaling: 'https://your-guided-url.ngrok-free.app/chat',\r\n    distortion_detection: 'https://your-distortion-url.ngrok-free.app/chat',\r\n    thought_deframing: 'https://your-deframe-url.ngrok-free.app/chat',\r\n    affirmation_separator: 'https://70d3d465bc0e.ngrok-free.app/affirmation',\r\n    default: 'https://5ef2e9bd1b39.ngrok-free.app/chat'\r\n  };\r\n\r\n  // Send message logic\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: 'me', text: input };\r\n    setInput('');\r\n    setSessions((prev) =>\r\n      prev.map((s) =>\r\n        s.id === currentSessionId ? { ...s, messages: [...s.messages, userMessage] } : s\r\n      )\r\n    );\r\n\r\n    if (!chatStarted) setChatStarted(true);\r\n    setTyping(true);\r\n\r\n    const endpoint = modeToUrlMap[mode] || modeToUrlMap['default'];\r\n\r\n    try {\r\n      const response = await fetch(endpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: input, mode })\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Server Error');\r\n\r\n      const data = await response.json();\r\n      const aiMessage = { sender: 'ai', text: data.reply };\r\n\r\n      setSessions((prev) =>\r\n        prev.map((s) =>\r\n          s.id === currentSessionId ? { ...s, messages: [...s.messages, aiMessage] } : s\r\n        )\r\n      );\r\n    } catch {\r\n      const fallback = {\r\n        sender: 'ai',\r\n        text: '⚠️ Sorry, I couldn\\'t connect to the server. Try again later.'\r\n      };\r\n      setSessions((prev) =>\r\n        prev.map((s) =>\r\n          s.id === currentSessionId ? { ...s, messages: [...s.messages, fallback] } : s\r\n        )\r\n      );\r\n    }\r\n\r\n    setTyping(false);\r\n  };\r\n\r\n  // Render messages\r\n  const renderMessages = () =>\r\n    currentSession?.messages.map((msg, index) => (\r\n      <MessageBubble key={index} msg={msg} voice={voice} />\r\n    ));\r\n\r\n  return (\r\n    <div className={`chatbot-container ${darkMode ? 'dark' : ''}`}>\r\n      <Sidebar\r\n        onSelect={(val) => {\r\n          setView(val);\r\n          setSelectedTask(null);\r\n        }}\r\n        selected={view}\r\n      />\r\n\r\n      <button\r\n        className={`sidebar-toggle ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`}\r\n        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n      >\r\n        {sidebarOpen ? '⬅️' : '➡️'}\r\n      </button>\r\n\r\n      <div className={`main-content ${sidebarOpen ? '' : 'expanded'}`}>\r\n        <DarkModeToggle\r\n          darkMode={darkMode}\r\n          setDarkMode={setDarkMode}\r\n          sidebarOpen={sidebarOpen}\r\n        />\r\n\r\n        {view === 'chat' && (\r\n          <div className=\"chat-area\">\r\n            <div className=\"chat-box\" ref={chatBoxRef}>\r\n              {renderMessages()}\r\n              {typing && (\r\n                <div className=\"message ai\">\r\n                  <div className=\"bubble\">Typing...</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <ChatInput\r\n              input={input}\r\n              setInput={setInput}\r\n              onSend={sendMessage}\r\n              setMode={setMode}\r\n              onVoiceInput={(text) => setInput(text)}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {view === 'tasks' && (\r\n          <TaskPanel\r\n            mode={mode}\r\n            onClose={() => setView('chat')}\r\n            onTaskClick={(task) => setSelectedTask(task)}\r\n          />\r\n        )}\r\n\r\n        {view === 'journals' && !selectedTask && (\r\n          <JournalsPage onNew={() => setView('newJournal')} />\r\n        )}\r\n\r\n        {view === 'journals' && selectedTask && (\r\n          <JournalPanel task={selectedTask} onClose={() => setSelectedTask(null)} />\r\n        )}\r\n\r\n        {view === 'newJournal' && (\r\n          <JournalPanel task={{ title: '' }} onClose={() => setView('journals')} />\r\n        )}\r\n\r\n        {view === 'bookTherapist' && <BookTherapistPage />}\r\n        {view === 'sessionSummary' && <SessionSummaryPage />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
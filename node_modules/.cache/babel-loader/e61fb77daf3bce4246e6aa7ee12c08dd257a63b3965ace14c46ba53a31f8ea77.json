{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./ChatBot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const chatBoxRef = useRef(null);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    try {\n      const res = await fetch(\"https://xxxxxx.ngrok.io/chat\", {\n        // Replace with ngrok link\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await res.json();\n      const botMessage = {\n        sender: \"bot\",\n        text: data.reply\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      const errorMsg = {\n        sender: \"bot\",\n        text: \"⚠️ Error connecting to the therapist.\"\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    }\n  };\n  useEffect(() => {\n    var _chatBoxRef$current;\n    (_chatBoxRef$current = chatBoxRef.current) === null || _chatBoxRef$current === void 0 ? void 0 : _chatBoxRef$current.scrollTo({\n      top: chatBoxRef.current.scrollHeight,\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") sendMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: \"\\uD83E\\uDDE0 Mental Health Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      ref: chatBoxRef,\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-bubble\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyPress,\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"Ekci+Ezk3nhRZPOD2Y68v7/O5vs=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","input","setInput","chatBoxRef","sendMessage","trim","userMessage","sender","text","prev","res","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","error","errorMsg","_chatBoxRef$current","current","scrollTo","top","scrollHeight","behavior","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","index","type","value","onChange","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./ChatBot.css\";\r\n\r\nconst ChatBot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const chatBoxRef = useRef(null);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const res = await fetch(\"https://xxxxxx.ngrok.io/chat\", {  // Replace with ngrok link\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      const botMessage = { sender: \"bot\", text: data.reply };\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (error) {\r\n      const errorMsg = { sender: \"bot\", text: \"⚠️ Error connecting to the therapist.\" };\r\n      setMessages((prev) => [...prev, errorMsg]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    chatBoxRef.current?.scrollTo({\r\n      top: chatBoxRef.current.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [messages]);\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") sendMessage();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <header className=\"chat-header\">🧠 Mental Health Assistant</header>\r\n      <div className=\"chat-box\" ref={chatBoxRef}>\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chat-message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`}\r\n          >\r\n            <div className=\"chat-bubble\">{msg.text}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input-area\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyPress}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={sendMessage}>➤</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
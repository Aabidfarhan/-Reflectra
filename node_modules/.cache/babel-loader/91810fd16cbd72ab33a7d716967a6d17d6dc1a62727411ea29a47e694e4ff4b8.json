{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\TaskPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/TaskPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultTasks = {\n  guided_journaling: [{\n    title: 'Write Your Feelings',\n    time: 'Daily at 9:00am'\n  }, {\n    title: 'Reflect on Wins',\n    time: 'Every Evening'\n  }],\n  distortion_detection: [{\n    title: 'Identify Cognitive Distortions',\n    time: 'Every Monday'\n  }],\n  thought_deframing: [],\n  affirmation_separator: []\n};\nconst TaskPanel = ({\n  mode\n}) => {\n  _s();\n  const [tasks, setTasks] = useState(defaultTasks[mode] || []);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    time: ''\n  });\n  const [showForm, setShowForm] = useState(false);\n  const handleAddTask = () => {\n    if (newTask.title && newTask.time) {\n      setTasks(prev => [...prev, newTask]);\n      setNewTask({\n        title: '',\n        time: ''\n      });\n      setShowForm(false);\n    }\n  };\n  if (!mode) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"task-title\",\n      children: [\"Tasks for \", mode.replace(/_/g, ' ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-task-btn\",\n      onClick: () => setShowForm(!showForm),\n      children: \"+ Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Task Title\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Time (e.g. Daily at 9am)\",\n        value: newTask.time,\n        onChange: e => setNewTask({\n          ...newTask,\n          time: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-cards\",\n      children: tasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPanel, \"+L1Bl3kZr4VC4Nz71FfGDVl/40w=\");\n_c = TaskPanel;\nexport default TaskPanel;\nvar _c;\n$RefreshReg$(_c, \"TaskPanel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","defaultTasks","guided_journaling","title","time","distortion_detection","thought_deframing","affirmation_separator","TaskPanel","mode","_s","tasks","setTasks","newTask","setNewTask","showForm","setShowForm","handleAddTask","prev","className","children","replace","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","e","target","map","task","idx","_c","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/TaskPanel.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/TaskPanel.css';\r\n\r\nconst defaultTasks = {\r\n  guided_journaling: [\r\n    { title: 'Write Your Feelings', time: 'Daily at 9:00am' },\r\n    { title: 'Reflect on Wins', time: 'Every Evening' },\r\n  ],\r\n  distortion_detection: [\r\n    { title: 'Identify Cognitive Distortions', time: 'Every Monday' },\r\n  ],\r\n  thought_deframing: [],\r\n  affirmation_separator: [],\r\n};\r\n\r\nconst TaskPanel = ({ mode }) => {\r\n  const [tasks, setTasks] = useState(defaultTasks[mode] || []);\r\n  const [newTask, setNewTask] = useState({ title: '', time: '' });\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.title && newTask.time) {\r\n      setTasks((prev) => [...prev, newTask]);\r\n      setNewTask({ title: '', time: '' });\r\n      setShowForm(false);\r\n    }\r\n  };\r\n\r\n  if (!mode) return null;\r\n\r\n  return (\r\n    <div className=\"task-panel\">\r\n      <h2 className=\"task-title\">Tasks for {mode.replace(/_/g, ' ')}</h2>\r\n      <button className=\"add-task-btn\" onClick={() => setShowForm(!showForm)}>\r\n        + Add New Task\r\n      </button>\r\n\r\n      {showForm && (\r\n        <div className=\"task-form\">\r\n          <input\r\n            placeholder=\"Task Title\"\r\n            value={newTask.title}\r\n            onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n          />\r\n          <input\r\n            placeholder=\"Time (e.g. Daily at 9am)\"\r\n            value={newTask.time}\r\n            onChange={(e) => setNewTask({ ...newTask, time: e.target.value })}\r\n          />\r\n          <button onClick={handleAddTask}>Save</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"task-cards\">\r\n        {tasks.map((task, idx) => (\r\n          <div className=\"task-card\" key={idx}>\r\n            <h4>{task.title}</h4>\r\n            <p>{task.time}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Sidebar from './Sidebar';\nimport BookTherapistPage from './BookTherapistPage';\nimport SessionSummaryPage from './SessionSummaryPage';\nimport MessageList from './MessageList';\nimport ChatInput from './ChatInput';\nimport TaskPanel from './TaskPanel';\nimport JournalPanel from './JournalPanel';\nimport JournalsPage from './JournalsPage';\nimport DarkModeToggle from './DarkModeToggle';\nimport '../styles/ChatBot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [sessions, setSessions] = useState([{\n    id: 1,\n    name: 'Session 1',\n    messages: []\n  }]);\n  const [currentSessionId, setCurrentSessionId] = useState(1);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [mode, setMode] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [view, setView] = useState('chat');\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const chatBoxRef = useRef(null);\n  const currentSession = sessions.find(s => s.id === currentSessionId);\n  useEffect(() => {\n    var _chatBoxRef$current;\n    (_chatBoxRef$current = chatBoxRef.current) === null || _chatBoxRef$current === void 0 ? void 0 : _chatBoxRef$current.scrollTo({\n      top: chatBoxRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [currentSession === null || currentSession === void 0 ? void 0 : currentSession.messages, typing]);\n\n  // 🔍 Mode Detection Logic\n  const detectMode = message => {\n    const lower = message.toLowerCase();\n    if (lower.includes('sad') || lower.includes('lonely') || lower.includes('vent')) {\n      return 'guided_journaling';\n    }\n    if (lower.includes('affirm') || lower.includes('confidence') || lower.includes('self-esteem')) {\n      return 'affirmation_generator';\n    }\n    if (lower.includes('distortion') || lower.includes('negative thinking') || lower.includes('overthinking')) {\n      return 'distortion_detection';\n    }\n    if (lower.includes('help') || lower.includes('support') || lower.includes('talk')) {\n      return 'emotional_support';\n    }\n    return 'general'; // fallback mode\n  };\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'me',\n      text: input\n    };\n    setInput('');\n    setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n      ...s,\n      messages: [...s.messages, userMessage]\n    } : s));\n    if (!chatStarted) setChatStarted(true);\n    setTyping(true);\n\n    // ✨ Auto-detect the mode\n    const detectedMode = detectMode(input);\n    setMode(detectedMode); // update UI state\n\n    try {\n      const response = await fetch('https://415c3e08cbc1.ngrok-free.app/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input,\n          mode: detectedMode\n        })\n      });\n      if (!response.ok) throw new Error(\"Server Error\");\n      const data = await response.json();\n      const aiMessage = {\n        sender: 'ai',\n        text: data.reply\n      };\n      setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n        ...s,\n        messages: [...s.messages, aiMessage]\n      } : s));\n    } catch (err) {\n      const fallback = {\n        sender: 'ai',\n        text: \"⚠️ Sorry, I couldn't connect to the server. Try again later.\"\n      };\n      setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n        ...s,\n        messages: [...s.messages, fallback]\n      } : s));\n    }\n    setTyping(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${darkMode ? 'dark' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onSelect: val => {\n        setView(val);\n        setSelectedTask(null);\n      },\n      selected: view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `sidebar-toggle ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`,\n      onClick: () => setSidebarOpen(!sidebarOpen),\n      children: sidebarOpen ? '⬅️' : '➡️'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-content ${sidebarOpen ? '' : 'expanded'}`,\n      children: [/*#__PURE__*/_jsxDEV(DarkModeToggle, {\n        darkMode: darkMode,\n        setDarkMode: setDarkMode,\n        sidebarOpen: sidebarOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), mode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detected-mode-banner\",\n        children: [\"\\uD83E\\uDDE0 Auto-selected Mode: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), view === 'chat' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-area\",\n        children: [/*#__PURE__*/_jsxDEV(MessageList, {\n          messages: currentSession === null || currentSession === void 0 ? void 0 : currentSession.messages,\n          chatBoxRef: chatBoxRef,\n          typing: typing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          input: input,\n          setInput: setInput,\n          onSend: sendMessage,\n          setMode: setMode,\n          onVoiceInput: text => {\n            setInput(text);\n            setTimeout(sendMessage, 10);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), view === 'tasks' && /*#__PURE__*/_jsxDEV(TaskPanel, {\n        mode: mode,\n        onClose: () => setView('chat'),\n        onTaskClick: task => setSelectedTask(task)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), view === 'journals' && !selectedTask && /*#__PURE__*/_jsxDEV(JournalsPage, {\n        onNew: () => setView('newJournal')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), view === 'journals' && selectedTask && /*#__PURE__*/_jsxDEV(JournalPanel, {\n        task: selectedTask,\n        onClose: () => setSelectedTask(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), view === 'newJournal' && /*#__PURE__*/_jsxDEV(JournalPanel, {\n        task: {\n          title: ''\n        },\n        onClose: () => setView('journals')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), view === 'bookTherapist' && /*#__PURE__*/_jsxDEV(BookTherapistPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), view === 'sessionSummary' && /*#__PURE__*/_jsxDEV(SessionSummaryPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"6W4mH2xJ9lgOZA12BFV3zpkpiFc=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Sidebar","BookTherapistPage","SessionSummaryPage","MessageList","ChatInput","TaskPanel","JournalPanel","JournalsPage","DarkModeToggle","jsxDEV","_jsxDEV","ChatBot","_s","input","setInput","sessions","setSessions","id","name","messages","currentSessionId","setCurrentSessionId","chatStarted","setChatStarted","mode","setMode","darkMode","setDarkMode","typing","setTyping","selectedTask","setSelectedTask","view","setView","sidebarOpen","setSidebarOpen","chatBoxRef","currentSession","find","s","_chatBoxRef$current","current","scrollTo","top","scrollHeight","behavior","detectMode","message","lower","toLowerCase","includes","sendMessage","trim","userMessage","sender","text","prev","map","detectedMode","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","aiMessage","reply","err","fallback","className","children","onSelect","val","selected","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSend","onVoiceInput","setTimeout","onClose","onTaskClick","task","onNew","title","_c","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport BookTherapistPage from './BookTherapistPage';\r\nimport SessionSummaryPage from './SessionSummaryPage';\r\nimport MessageList from './MessageList';\r\nimport ChatInput from './ChatInput';\r\nimport TaskPanel from './TaskPanel';\r\nimport JournalPanel from './JournalPanel';\r\nimport JournalsPage from './JournalsPage';\r\nimport DarkModeToggle from './DarkModeToggle';\r\nimport '../styles/ChatBot.css';\r\n\r\nconst ChatBot = () => {\r\n  const [input, setInput] = useState('');\r\n  const [sessions, setSessions] = useState([{ id: 1, name: 'Session 1', messages: [] }]);\r\n  const [currentSessionId, setCurrentSessionId] = useState(1);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [view, setView] = useState('chat');\r\n  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n\r\n  const chatBoxRef = useRef(null);\r\n  const currentSession = sessions.find((s) => s.id === currentSessionId);\r\n\r\n  useEffect(() => {\r\n    chatBoxRef.current?.scrollTo({ top: chatBoxRef.current.scrollHeight, behavior: 'smooth' });\r\n  }, [currentSession?.messages, typing]);\r\n\r\n  // 🔍 Mode Detection Logic\r\n  const detectMode = (message) => {\r\n    const lower = message.toLowerCase();\r\n\r\n    if (lower.includes('sad') || lower.includes('lonely') || lower.includes('vent')) {\r\n      return 'guided_journaling';\r\n    }\r\n    if (lower.includes('affirm') || lower.includes('confidence') || lower.includes('self-esteem')) {\r\n      return 'affirmation_generator';\r\n    }\r\n    if (lower.includes('distortion') || lower.includes('negative thinking') || lower.includes('overthinking')) {\r\n      return 'distortion_detection';\r\n    }\r\n    if (lower.includes('help') || lower.includes('support') || lower.includes('talk')) {\r\n      return 'emotional_support';\r\n    }\r\n\r\n    return 'general'; // fallback mode\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: 'me', text: input };\r\n    setInput('');\r\n    setSessions((prev) =>\r\n      prev.map((s) =>\r\n        s.id === currentSessionId ? { ...s, messages: [...s.messages, userMessage] } : s\r\n      )\r\n    );\r\n\r\n    if (!chatStarted) setChatStarted(true);\r\n    setTyping(true);\r\n\r\n    // ✨ Auto-detect the mode\r\n    const detectedMode = detectMode(input);\r\n    setMode(detectedMode); // update UI state\r\n\r\n    try {\r\n      const response = await fetch('https://415c3e08cbc1.ngrok-free.app/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: input, mode: detectedMode }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Server Error\");\r\n\r\n      const data = await response.json();\r\n\r\n      const aiMessage = { sender: 'ai', text: data.reply };\r\n      setSessions((prev) =>\r\n        prev.map((s) =>\r\n          s.id === currentSessionId ? { ...s, messages: [...s.messages, aiMessage] } : s\r\n        )\r\n      );\r\n    } catch (err) {\r\n      const fallback = {\r\n        sender: 'ai',\r\n        text: \"⚠️ Sorry, I couldn't connect to the server. Try again later.\",\r\n      };\r\n      setSessions((prev) =>\r\n        prev.map((s) =>\r\n          s.id === currentSessionId ? { ...s, messages: [...s.messages, fallback] } : s\r\n        )\r\n      );\r\n    }\r\n\r\n    setTyping(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`chatbot-container ${darkMode ? 'dark' : ''}`}>\r\n      <Sidebar\r\n        onSelect={(val) => {\r\n          setView(val);\r\n          setSelectedTask(null);\r\n        }}\r\n        selected={view}\r\n      />\r\n\r\n      <button\r\n        className={`sidebar-toggle ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`}\r\n        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n      >\r\n        {sidebarOpen ? '⬅️' : '➡️'}\r\n      </button>\r\n\r\n      <div className={`main-content ${sidebarOpen ? '' : 'expanded'}`}>\r\n        <DarkModeToggle\r\n          darkMode={darkMode}\r\n          setDarkMode={setDarkMode}\r\n          sidebarOpen={sidebarOpen}\r\n        />\r\n\r\n        {mode && (\r\n          <div className=\"detected-mode-banner\">\r\n            🧠 Auto-selected Mode: <strong>{mode}</strong>\r\n          </div>\r\n        )}\r\n\r\n        {view === 'chat' && (\r\n          <div className=\"chat-area\">\r\n            <MessageList messages={currentSession?.messages} chatBoxRef={chatBoxRef} typing={typing} />\r\n            <ChatInput\r\n              input={input}\r\n              setInput={setInput}\r\n              onSend={sendMessage}\r\n              setMode={setMode}\r\n              onVoiceInput={(text) => {\r\n                setInput(text);\r\n                setTimeout(sendMessage, 10);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {view === 'tasks' && (\r\n          <TaskPanel\r\n            mode={mode}\r\n            onClose={() => setView('chat')}\r\n            onTaskClick={(task) => setSelectedTask(task)}\r\n          />\r\n        )}\r\n\r\n        {view === 'journals' && !selectedTask && (\r\n          <JournalsPage onNew={() => setView('newJournal')} />\r\n        )}\r\n\r\n        {view === 'journals' && selectedTask && (\r\n          <JournalPanel task={selectedTask} onClose={() => setSelectedTask(null)} />\r\n        )}\r\n\r\n        {view === 'newJournal' && (\r\n          <JournalPanel task={{ title: '' }} onClose={() => setView('journals')} />\r\n        )}\r\n\r\n        {view === 'bookTherapist' && (\r\n          <BookTherapistPage />\r\n        )}\r\n\r\n        {view === 'sessionSummary' && (\r\n          <SessionSummaryPage />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
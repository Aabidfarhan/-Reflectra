{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\ChatInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/ChatInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  input,\n  setInput,\n  onSend,\n  setMode,\n  onVoiceInput\n}) => {\n  _s();\n  const [activeMode, setActiveMode] = useState('');\n  const handleModeSelect = mode => {\n    setActiveMode(mode);\n    setMode(mode);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') onSend();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeMode === '' ? 'active' : '',\n        onClick: () => handleModeSelect(''),\n        children: \"Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeMode === 'guided_journaling' ? 'active' : '',\n        onClick: () => handleModeSelect('guided_journaling'),\n        children: \"Guided Journaling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeMode === 'distortion_detection' ? 'active' : '',\n        onClick: () => handleModeSelect('distortion_detection'),\n        children: \"Distortion Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeMode === 'thought_deframing' ? 'active' : '',\n        onClick: () => handleModeSelect('thought_deframing'),\n        children: \"Thought Deframing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeMode === 'affirmation_separator' ? 'active' : '',\n        onClick: () => handleModeSelect('affirmation_separator'),\n        children: \"Affirmation Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSend,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInput, \"jmkGyjy3Ua94whTkUu5hM2I8q/E=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatInput","input","setInput","onSend","setMode","onVoiceInput","_s","activeMode","setActiveMode","handleModeSelect","mode","handleKeyPress","e","key","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/ChatInput.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/ChatInput.css';\r\n\r\nconst ChatInput = ({ input, setInput, onSend, setMode, onVoiceInput }) => {\r\n  const [activeMode, setActiveMode] = useState('');\r\n\r\n  const handleModeSelect = (mode) => {\r\n    setActiveMode(mode);\r\n    setMode(mode);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') onSend();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-input-container\">\r\n      <div className=\"mode-selector\">\r\n        <button\r\n          className={activeMode === '' ? 'active' : ''}\r\n          onClick={() => handleModeSelect('')}\r\n        >\r\n          Default\r\n        </button>\r\n        <button\r\n          className={activeMode === 'guided_journaling' ? 'active' : ''}\r\n          onClick={() => handleModeSelect('guided_journaling')}\r\n        >\r\n          Guided Journaling\r\n        </button>\r\n        <button\r\n          className={activeMode === 'distortion_detection' ? 'active' : ''}\r\n          onClick={() => handleModeSelect('distortion_detection')}\r\n        >\r\n          Distortion Detection\r\n        </button>\r\n        <button\r\n          className={activeMode === 'thought_deframing' ? 'active' : ''}\r\n          onClick={() => handleModeSelect('thought_deframing')}\r\n        >\r\n          Thought Deframing\r\n        </button>\r\n        <button\r\n          className={activeMode === 'affirmation_separator' ? 'active' : ''}\r\n          onClick={() => handleModeSelect('affirmation_separator')}\r\n        >\r\n          Affirmation Mode\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"input-row\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={onSend}>âž¤</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport MicButton from './MicButton';\nimport ModeSelector from './ModeSelector';\nimport MessageList from './MessageList';\nimport ChatInput from './ChatInput';\nimport './ChatBot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [sessions, setSessions] = useState([{\n    id: 1,\n    name: 'Session 1',\n    messages: []\n  }]);\n  const [currentSessionId, setCurrentSessionId] = useState(1);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [mode, setMode] = useState('guided_journaling');\n  const chatBoxRef = useRef(null);\n  const currentSession = sessions.find(s => s.id === currentSessionId);\n  useEffect(() => {\n    var _chatBoxRef$current;\n    (_chatBoxRef$current = chatBoxRef.current) === null || _chatBoxRef$current === void 0 ? void 0 : _chatBoxRef$current.scrollTo({\n      top: chatBoxRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [currentSession === null || currentSession === void 0 ? void 0 : currentSession.messages]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'me',\n      text: input\n    };\n    setInput('');\n    setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n      ...s,\n      messages: [...s.messages, userMessage]\n    } : s));\n    if (!chatStarted) setChatStarted(true);\n    try {\n      const response = await fetch('https://39b48d3e635b.ngrok-free.app/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input,\n          mode\n        })\n      });\n      if (!response.ok) throw new Error('API error');\n      const data = await response.json();\n      const aiMessage = {\n        sender: 'ai',\n        text: data.reply\n      };\n      setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n        ...s,\n        messages: [...s.messages, aiMessage]\n      } : s));\n    } catch (err) {\n      console.error('Connection error:', err);\n      const fallback = {\n        sender: 'ai',\n        text: \"‚ö†Ô∏è Sorry, I couldn't connect to the server. Try again later.\"\n      };\n      setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n        ...s,\n        messages: [...s.messages, fallback]\n      } : s));\n    }\n  };\n  const handleVoiceInput = text => {\n    setInput(text);\n    setTimeout(() => sendMessage(), 10);\n  };\n  const clearChat = () => {\n    setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n      ...s,\n      messages: []\n    } : s));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(ModeSelector, {\n      setMode: setMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `logo-container ${chatStarted ? 'minimized' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"logo-video\",\n        src: \"/logo.mp4\",\n        autoPlay: true,\n        muted: true,\n        loop: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area full-width\",\n      children: [/*#__PURE__*/_jsxDEV(MessageList, {\n        messages: currentSession === null || currentSession === void 0 ? void 0 : currentSession.messages,\n        chatBoxRef: chatBoxRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        input: input,\n        setInput: setInput,\n        onSend: sendMessage,\n        onVoiceInput: handleVoiceInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearChat,\n        style: {\n          marginTop: '10px',\n          fontSize: '12px',\n          background: '#eee',\n          borderRadius: '8px',\n          padding: '6px 12px',\n          border: '1px solid #ccc'\n        },\n        children: \"\\uD83D\\uDDD1\\uFE0F Clear Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"iM3knaadDLiR2ZUJmzkjlV8hvz8=\");\n_c = ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MicButton","ModeSelector","MessageList","ChatInput","jsxDEV","_jsxDEV","ChatBot","_s","input","setInput","sessions","setSessions","id","name","messages","currentSessionId","setCurrentSessionId","chatStarted","setChatStarted","mode","setMode","chatBoxRef","currentSession","find","s","_chatBoxRef$current","current","scrollTo","top","scrollHeight","behavior","sendMessage","trim","userMessage","sender","text","prev","map","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","aiMessage","reply","err","console","error","fallback","handleVoiceInput","setTimeout","clearChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","autoPlay","muted","loop","playsInline","onSend","onVoiceInput","onClick","style","marginTop","fontSize","background","borderRadius","padding","border","_c","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport MicButton from './MicButton';\r\nimport ModeSelector from './ModeSelector';\r\nimport MessageList from './MessageList';\r\nimport ChatInput from './ChatInput';\r\nimport './ChatBot.css';\r\n\r\nconst ChatBot = () => {\r\n  const [input, setInput] = useState('');\r\n  const [sessions, setSessions] = useState([{ id: 1, name: 'Session 1', messages: [] }]);\r\n  const [currentSessionId, setCurrentSessionId] = useState(1);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [mode, setMode] = useState('guided_journaling');\r\n  const chatBoxRef = useRef(null);\r\n\r\n  const currentSession = sessions.find((s) => s.id === currentSessionId);\r\n\r\n  useEffect(() => {\r\n    chatBoxRef.current?.scrollTo({ top: chatBoxRef.current.scrollHeight, behavior: 'smooth' });\r\n  }, [currentSession?.messages]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: 'me', text: input };\r\n    setInput('');\r\n\r\n    setSessions((prev) =>\r\n      prev.map((s) =>\r\n        s.id === currentSessionId ? { ...s, messages: [...s.messages, userMessage] } : s\r\n      )\r\n    );\r\n\r\n    if (!chatStarted) setChatStarted(true);\r\n\r\n    try {\r\n      const response = await fetch('https://39b48d3e635b.ngrok-free.app/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: input, mode }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('API error');\r\n      const data = await response.json();\r\n      const aiMessage = { sender: 'ai', text: data.reply };\r\n\r\n      setSessions((prev) =>\r\n        prev.map((s) =>\r\n          s.id === currentSessionId ? { ...s, messages: [...s.messages, aiMessage] } : s\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error('Connection error:', err);\r\n      const fallback = {\r\n        sender: 'ai',\r\n        text: \"‚ö†Ô∏è Sorry, I couldn't connect to the server. Try again later.\",\r\n      };\r\n      setSessions((prev) =>\r\n        prev.map((s) =>\r\n          s.id === currentSessionId ? { ...s, messages: [...s.messages, fallback] } : s\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleVoiceInput = (text) => {\r\n    setInput(text);\r\n    setTimeout(() => sendMessage(), 10);\r\n  };\r\n\r\n  const clearChat = () => {\r\n    setSessions((prev) =>\r\n      prev.map((s) =>\r\n        s.id === currentSessionId ? { ...s, messages: [] } : s\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <ModeSelector setMode={setMode} />\r\n\r\n      <div className={`logo-container ${chatStarted ? 'minimized' : ''}`}>\r\n        <video className=\"logo-video\" src=\"/logo.mp4\" autoPlay muted loop playsInline />\r\n      </div>\r\n\r\n      <div className=\"chat-area full-width\">\r\n        <MessageList messages={currentSession?.messages} chatBoxRef={chatBoxRef} />\r\n        <ChatInput\r\n          input={input}\r\n          setInput={setInput}\r\n          onSend={sendMessage}\r\n          onVoiceInput={handleVoiceInput}\r\n        />\r\n        <button onClick={clearChat} style={{ marginTop: '10px', fontSize: '12px', background: '#eee', borderRadius: '8px', padding: '6px 12px', border: '1px solid #ccc' }}>üóëÔ∏è Clear Chat</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\MicButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MicButton.css'; // optional for scoped styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MicButton = ({\n  onVoiceInput\n}) => {\n  _s();\n  const [listening, setListening] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const startListening = () => {\n    if (!('webkitSpeechRecognition' in window || 'SpeechRecognition' in window)) {\n      alert(\"Speech recognition not supported in this browser.\");\n      return;\n    }\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    setListening(true);\n    setStatus(\"🎙️ Listening...\");\n    recognition.start();\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      onVoiceInput(transcript);\n      setListening(false);\n      setTimeout(() => setStatus(\"\"), 2000);\n    };\n    recognition.onerror = event => {\n      console.error('Speech recognition error:', event.error);\n      setStatus(\"❌ Error capturing voice.\");\n      setListening(false);\n    };\n    recognition.onend = () => {\n      if (listening) setListening(false);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `mic-button ${listening ? 'pulsing' : ''}`,\n      onClick: startListening,\n      title: \"Click to speak\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/mic.png\",\n        alt: \"Mic\",\n        className: \"mic-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: '12px',\n        color: '#444',\n        marginTop: '4px'\n      },\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://www.flaticon.com/free-icons/mic\",\n      title: \"mic icons\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      style: {\n        fontSize: '10px',\n        marginTop: '6px',\n        textDecoration: 'none',\n        color: '#888'\n      },\n      children: \"Mic icons created by graphicmall - Flaticon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(MicButton, \"E+NcYLBP/Z6KqlQV7mdC0RYURpo=\");\n_c = MicButton;\nexport default MicButton;\nvar _c;\n$RefreshReg$(_c, \"MicButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MicButton","onVoiceInput","_s","listening","setListening","status","setStatus","startListening","window","alert","SpeechRecognition","webkitSpeechRecognition","recognition","lang","interimResults","maxAlternatives","start","onresult","event","transcript","results","setTimeout","onerror","console","error","onend","style","display","flexDirection","alignItems","children","className","onClick","title","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","marginTop","href","target","rel","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/MicButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './MicButton.css'; // optional for scoped styling\r\n\r\nconst MicButton = ({ onVoiceInput }) => {\r\n  const [listening, setListening] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const startListening = () => {\r\n    if (!('webkitSpeechRecognition' in window || 'SpeechRecognition' in window)) {\r\n      alert(\"Speech recognition not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n\r\n    recognition.lang = 'en-US';\r\n    recognition.interimResults = false;\r\n    recognition.maxAlternatives = 1;\r\n\r\n    setListening(true);\r\n    setStatus(\"🎙️ Listening...\");\r\n    recognition.start();\r\n\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      onVoiceInput(transcript);\r\n      setListening(false);\r\n      setTimeout(() => setStatus(\"\"), 2000);\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error('Speech recognition error:', event.error);\r\n      setStatus(\"❌ Error capturing voice.\");\r\n      setListening(false);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      if (listening) setListening(false);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <button\r\n        className={`mic-button ${listening ? 'pulsing' : ''}`}\r\n        onClick={startListening}\r\n        title=\"Click to speak\"\r\n      >\r\n        <img src=\"/mic.png\" alt=\"Mic\" className=\"mic-icon\" />\r\n      </button>\r\n\r\n      {status && (\r\n        <span style={{ fontSize: '12px', color: '#444', marginTop: '4px' }}>\r\n          {status}\r\n        </span>\r\n      )}\r\n\r\n      <a\r\n        href=\"https://www.flaticon.com/free-icons/mic\"\r\n        title=\"mic icons\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        style={{\r\n          fontSize: '10px',\r\n          marginTop: '6px',\r\n          textDecoration: 'none',\r\n          color: '#888'\r\n        }}\r\n      >\r\n        Mic icons created by graphicmall - Flaticon\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MicButton;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\MicButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/MicButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MicButton = ({\n  onVoiceInput\n}) => {\n  _s();\n  const [listening, setListening] = useState(false);\n  const recognitionRef = React.useRef(null);\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) return;\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      onVoiceInput(transcript);\n      setListening(false);\n    };\n    recognition.onend = () => setListening(false);\n    recognitionRef.current = recognition;\n  }, [onVoiceInput]);\n  const toggleListening = () => {\n    if (listening) {\n      var _recognitionRef$curre;\n      (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n    } else {\n      var _recognitionRef$curre2;\n      (_recognitionRef$curre2 = recognitionRef.current) === null || _recognitionRef$curre2 === void 0 ? void 0 : _recognitionRef$curre2.start();\n    }\n    setListening(!listening);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `mic-button ${listening ? 'active' : ''}`,\n    onClick: toggleListening,\n    children: \"\\uD83C\\uDFA4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(MicButton, \"QOoBwmnqYUgGGDD1S3XyFkNjuTM=\");\n_c = MicButton;\nexport default MicButton;\nvar _c;\n$RefreshReg$(_c, \"MicButton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MicButton","onVoiceInput","_s","listening","setListening","recognitionRef","useRef","SpeechRecognition","window","webkitSpeechRecognition","recognition","lang","continuous","interimResults","onresult","event","transcript","results","onend","current","toggleListening","_recognitionRef$curre","stop","_recognitionRef$curre2","start","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/MicButton.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/MicButton.css';\r\n\r\nconst MicButton = ({ onVoiceInput }) => {\r\n  const [listening, setListening] = useState(false);\r\n  const recognitionRef = React.useRef(null);\r\n\r\n  useEffect(() => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (!SpeechRecognition) return;\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = 'en-US';\r\n    recognition.continuous = false;\r\n    recognition.interimResults = false;\r\n\r\n    recognition.onresult = event => {\r\n      const transcript = event.results[0][0].transcript;\r\n      onVoiceInput(transcript);\r\n      setListening(false);\r\n    };\r\n\r\n    recognition.onend = () => setListening(false);\r\n    recognitionRef.current = recognition;\r\n  }, [onVoiceInput]);\r\n\r\n  const toggleListening = () => {\r\n    if (listening) {\r\n      recognitionRef.current?.stop();\r\n    } else {\r\n      recognitionRef.current?.start();\r\n    }\r\n    setListening(!listening);\r\n  };\r\n\r\n  return (\r\n    <button className={`mic-button ${listening ? 'active' : ''}`} onClick={toggleListening}>\r\n      ðŸŽ¤\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MicButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMS,cAAc,GAAGV,KAAK,CAACW,MAAM,CAAC,IAAI,CAAC;EAEzCT,SAAS,CAAC,MAAM;IACd,MAAMU,iBAAiB,GAAGC,MAAM,CAACD,iBAAiB,IAAIC,MAAM,CAACC,uBAAuB;IACpF,IAAI,CAACF,iBAAiB,EAAE;IAExB,MAAMG,WAAW,GAAG,IAAIH,iBAAiB,CAAC,CAAC;IAC3CG,WAAW,CAACC,IAAI,GAAG,OAAO;IAC1BD,WAAW,CAACE,UAAU,GAAG,KAAK;IAC9BF,WAAW,CAACG,cAAc,GAAG,KAAK;IAElCH,WAAW,CAACI,QAAQ,GAAGC,KAAK,IAAI;MAC9B,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,UAAU;MACjDf,YAAY,CAACe,UAAU,CAAC;MACxBZ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDM,WAAW,CAACQ,KAAK,GAAG,MAAMd,YAAY,CAAC,KAAK,CAAC;IAC7CC,cAAc,CAACc,OAAO,GAAGT,WAAW;EACtC,CAAC,EAAE,CAACT,YAAY,CAAC,CAAC;EAElB,MAAMmB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIjB,SAAS,EAAE;MAAA,IAAAkB,qBAAA;MACb,CAAAA,qBAAA,GAAAhB,cAAc,CAACc,OAAO,cAAAE,qBAAA,uBAAtBA,qBAAA,CAAwBC,IAAI,CAAC,CAAC;IAChC,CAAC,MAAM;MAAA,IAAAC,sBAAA;MACL,CAAAA,sBAAA,GAAAlB,cAAc,CAACc,OAAO,cAAAI,sBAAA,uBAAtBA,sBAAA,CAAwBC,KAAK,CAAC,CAAC;IACjC;IACApB,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,oBACEJ,OAAA;IAAQ0B,SAAS,EAAE,cAActB,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;IAACuB,OAAO,EAAEN,eAAgB;IAAAO,QAAA,EAAC;EAExF;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAAC7B,EAAA,CArCIF,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
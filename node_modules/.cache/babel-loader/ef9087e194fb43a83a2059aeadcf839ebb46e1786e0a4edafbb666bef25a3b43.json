{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aabid\\\\chatbot-app\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Sidebar from './Sidebar';\nimport BookTherapistPage from './BookTherapistPage';\nimport SessionSummaryPage from './SessionSummaryPage';\nimport ChatInput from './ChatInput';\nimport TaskPanel from './TaskPanel';\nimport JournalPanel from './JournalPanel';\nimport JournalsPage from './JournalsPage';\nimport DarkModeToggle from './DarkModeToggle';\nimport '../styles/ChatBot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageBubble = ({\n  msg,\n  voices,\n  defaultVoice\n}) => {\n  _s();\n  const [localVoice, setLocalVoice] = useState(defaultVoice || voices[0]);\n  const speakWithLocalVoice = () => {\n    const utterance = new SpeechSynthesisUtterance(msg.text);\n    utterance.lang = 'en-IN';\n    if (localVoice) utterance.voice = localVoice;\n    speechSynthesis.speak(utterance);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${msg.sender}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bubble\",\n      children: msg.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), msg.sender === 'ai' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"speak-button\",\n        onClick: speakWithLocalVoice,\n        title: `Read in ${(localVoice === null || localVoice === void 0 ? void 0 : localVoice.name) || 'Default Voice'}`,\n        children: \"\\uD83D\\uDD0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        style: {\n          marginLeft: '8px'\n        },\n        value: (localVoice === null || localVoice === void 0 ? void 0 : localVoice.name) || '',\n        onChange: e => {\n          const voice = voices.find(v => v.name === e.target.value);\n          if (voice) setLocalVoice(voice);\n        },\n        children: voices.map((voice, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: voice.name,\n          children: [voice.name, \" (\", voice.lang, \")\"]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageBubble, \"DBNAjRXsuIPCnNYuheble09Tcks=\");\n_c = MessageBubble;\nconst ChatBot = () => {\n  _s2();\n  const [input, setInput] = useState('');\n  const [sessions, setSessions] = useState([{\n    id: 1,\n    name: 'Session 1',\n    messages: []\n  }]);\n  const [currentSessionId, setCurrentSessionId] = useState(1);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [mode, setMode] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [view, setView] = useState('chat');\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [voices, setVoices] = useState([]);\n  const [selectedVoice, setSelectedVoice] = useState(null);\n  const chatBoxRef = useRef(null);\n  const currentSession = sessions.find(s => s.id === currentSessionId);\n  useEffect(() => {\n    var _chatBoxRef$current;\n    (_chatBoxRef$current = chatBoxRef.current) === null || _chatBoxRef$current === void 0 ? void 0 : _chatBoxRef$current.scrollTo({\n      top: chatBoxRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [currentSession === null || currentSession === void 0 ? void 0 : currentSession.messages, typing]);\n\n  // Load available voices and pick default Indian female voice\n  useEffect(() => {\n    const loadVoices = () => {\n      const availableVoices = window.speechSynthesis.getVoices();\n      setVoices(availableVoices);\n      const defaultVoice = availableVoices.find(voice => voice.name.toLowerCase().includes('kalpana') || voice.name.toLowerCase().includes('heera') || voice.name.toLowerCase().includes('google hindi') || voice.name.toLowerCase().includes('english (india)'));\n      if (defaultVoice) setSelectedVoice(defaultVoice);\n    };\n    loadVoices();\n    if (typeof window !== 'undefined') {\n      window.speechSynthesis.onvoiceschanged = loadVoices;\n    }\n  }, []);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'me',\n      text: input\n    };\n    setInput('');\n    setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n      ...s,\n      messages: [...s.messages, userMessage]\n    } : s));\n    if (!chatStarted) setChatStarted(true);\n    setTyping(true);\n    try {\n      const response = await fetch('https://5ef2e9bd1b39.ngrok-free.app/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input,\n          mode\n        })\n      });\n      if (!response.ok) throw new Error(\"Server Error\");\n      const data = await response.json();\n      const aiMessage = {\n        sender: 'ai',\n        text: data.reply\n      };\n      setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n        ...s,\n        messages: [...s.messages, aiMessage]\n      } : s));\n    } catch (err) {\n      const fallback = {\n        sender: 'ai',\n        text: \"⚠️ Sorry, I couldn't connect to the server. Try again later.\"\n      };\n      setSessions(prev => prev.map(s => s.id === currentSessionId ? {\n        ...s,\n        messages: [...s.messages, fallback]\n      } : s));\n    }\n    setTyping(false);\n  };\n  const renderMessagesWithAudio = () => {\n    return currentSession === null || currentSession === void 0 ? void 0 : currentSession.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n      msg: msg,\n      voices: voices,\n      defaultVoice: selectedVoice\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${darkMode ? 'dark' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onSelect: val => {\n        setView(val);\n        setSelectedTask(null);\n      },\n      selected: view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `sidebar-toggle ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`,\n      onClick: () => setSidebarOpen(!sidebarOpen),\n      children: sidebarOpen ? '⬅️' : '➡️'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-content ${sidebarOpen ? '' : 'expanded'}`,\n      children: [/*#__PURE__*/_jsxDEV(DarkModeToggle, {\n        darkMode: darkMode,\n        setDarkMode: setDarkMode,\n        sidebarOpen: sidebarOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), view === 'chat' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          ref: chatBoxRef,\n          children: [renderMessagesWithAudio(), typing && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message ai\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bubble\",\n              children: \"Typing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          input: input,\n          setInput: setInput,\n          onSend: sendMessage,\n          setMode: setMode,\n          onVoiceInput: text => setInput(text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), view === 'tasks' && /*#__PURE__*/_jsxDEV(TaskPanel, {\n        mode: mode,\n        onClose: () => setView('chat'),\n        onTaskClick: task => setSelectedTask(task)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), view === 'journals' && !selectedTask && /*#__PURE__*/_jsxDEV(JournalsPage, {\n        onNew: () => setView('newJournal')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), view === 'journals' && selectedTask && /*#__PURE__*/_jsxDEV(JournalPanel, {\n        task: selectedTask,\n        onClose: () => setSelectedTask(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), view === 'newJournal' && /*#__PURE__*/_jsxDEV(JournalPanel, {\n        task: {\n          title: ''\n        },\n        onClose: () => setView('journals')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), view === 'bookTherapist' && /*#__PURE__*/_jsxDEV(BookTherapistPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 38\n      }, this), view === 'sessionSummary' && /*#__PURE__*/_jsxDEV(SessionSummaryPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s2(ChatBot, \"fOGPD4NT+qKMhv0a0s7cHvYoKmE=\");\n_c2 = ChatBot;\nexport default ChatBot;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Sidebar","BookTherapistPage","SessionSummaryPage","ChatInput","TaskPanel","JournalPanel","JournalsPage","DarkModeToggle","jsxDEV","_jsxDEV","MessageBubble","msg","voices","defaultVoice","_s","localVoice","setLocalVoice","speakWithLocalVoice","utterance","SpeechSynthesisUtterance","text","lang","voice","speechSynthesis","speak","className","sender","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","alignItems","marginTop","onClick","title","name","marginLeft","value","onChange","e","find","v","target","map","idx","_c","ChatBot","_s2","input","setInput","sessions","setSessions","id","messages","currentSessionId","setCurrentSessionId","chatStarted","setChatStarted","mode","setMode","darkMode","setDarkMode","typing","setTyping","selectedTask","setSelectedTask","view","setView","sidebarOpen","setSidebarOpen","setVoices","selectedVoice","setSelectedVoice","chatBoxRef","currentSession","s","_chatBoxRef$current","current","scrollTo","top","scrollHeight","behavior","loadVoices","availableVoices","window","getVoices","toLowerCase","includes","onvoiceschanged","sendMessage","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","aiMessage","reply","err","fallback","renderMessagesWithAudio","index","onSelect","val","selected","ref","onSend","onVoiceInput","onClose","onTaskClick","task","onNew","_c2","$RefreshReg$"],"sources":["C:/Users/aabid/chatbot-app/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport BookTherapistPage from './BookTherapistPage';\r\nimport SessionSummaryPage from './SessionSummaryPage';\r\nimport ChatInput from './ChatInput';\r\nimport TaskPanel from './TaskPanel';\r\nimport JournalPanel from './JournalPanel';\r\nimport JournalsPage from './JournalsPage';\r\nimport DarkModeToggle from './DarkModeToggle';\r\nimport '../styles/ChatBot.css';\r\n\r\nconst MessageBubble = ({ msg, voices, defaultVoice }) => {\r\n  const [localVoice, setLocalVoice] = useState(defaultVoice || voices[0]);\r\n\r\n  const speakWithLocalVoice = () => {\r\n    const utterance = new SpeechSynthesisUtterance(msg.text);\r\n    utterance.lang = 'en-IN';\r\n    if (localVoice) utterance.voice = localVoice;\r\n    speechSynthesis.speak(utterance);\r\n  };\r\n\r\n  return (\r\n    <div className={`message ${msg.sender}`}>\r\n      <div className=\"bubble\">{msg.text}</div>\r\n      {msg.sender === 'ai' && (\r\n        <div style={{ display: 'flex', alignItems: 'center', marginTop: '4px' }}>\r\n          <button\r\n            className=\"speak-button\"\r\n            onClick={speakWithLocalVoice}\r\n            title={`Read in ${localVoice?.name || 'Default Voice'}`}\r\n          >\r\n            🔊\r\n          </button>\r\n          <select\r\n            style={{ marginLeft: '8px' }}\r\n            value={localVoice?.name || ''}\r\n            onChange={(e) => {\r\n              const voice = voices.find((v) => v.name === e.target.value);\r\n              if (voice) setLocalVoice(voice);\r\n            }}\r\n          >\r\n            {voices.map((voice, idx) => (\r\n              <option key={idx} value={voice.name}>\r\n                {voice.name} ({voice.lang})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChatBot = () => {\r\n  const [input, setInput] = useState('');\r\n  const [sessions, setSessions] = useState([{ id: 1, name: 'Session 1', messages: [] }]);\r\n  const [currentSessionId, setCurrentSessionId] = useState(1);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [mode, setMode] = useState('');\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [view, setView] = useState('chat');\r\n  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n  const [voices, setVoices] = useState([]);\r\n  const [selectedVoice, setSelectedVoice] = useState(null);\r\n\r\n  const chatBoxRef = useRef(null);\r\n  const currentSession = sessions.find((s) => s.id === currentSessionId);\r\n\r\n  useEffect(() => {\r\n    chatBoxRef.current?.scrollTo({ top: chatBoxRef.current.scrollHeight, behavior: 'smooth' });\r\n  }, [currentSession?.messages, typing]);\r\n\r\n  // Load available voices and pick default Indian female voice\r\n  useEffect(() => {\r\n    const loadVoices = () => {\r\n      const availableVoices = window.speechSynthesis.getVoices();\r\n      setVoices(availableVoices);\r\n\r\n      const defaultVoice = availableVoices.find((voice) =>\r\n        voice.name.toLowerCase().includes('kalpana') ||\r\n        voice.name.toLowerCase().includes('heera') ||\r\n        voice.name.toLowerCase().includes('google hindi') ||\r\n        voice.name.toLowerCase().includes('english (india)')\r\n      );\r\n      if (defaultVoice) setSelectedVoice(defaultVoice);\r\n    };\r\n\r\n    loadVoices();\r\n    if (typeof window !== 'undefined') {\r\n      window.speechSynthesis.onvoiceschanged = loadVoices;\r\n    }\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: 'me', text: input };\r\n    setInput('');\r\n    setSessions((prev) =>\r\n      prev.map((s) =>\r\n        s.id === currentSessionId ? { ...s, messages: [...s.messages, userMessage] } : s\r\n      )\r\n    );\r\n\r\n    if (!chatStarted) setChatStarted(true);\r\n    setTyping(true);\r\n\r\n    try {\r\n      const response = await fetch('https://5ef2e9bd1b39.ngrok-free.app/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: input, mode }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Server Error\");\r\n\r\n      const data = await response.json();\r\n      const aiMessage = { sender: 'ai', text: data.reply };\r\n\r\n      setSessions((prev) =>\r\n        prev.map((s) =>\r\n          s.id === currentSessionId ? { ...s, messages: [...s.messages, aiMessage] } : s\r\n        )\r\n      );\r\n    } catch (err) {\r\n      const fallback = {\r\n        sender: 'ai',\r\n        text: \"⚠️ Sorry, I couldn't connect to the server. Try again later.\",\r\n      };\r\n      setSessions((prev) =>\r\n        prev.map((s) =>\r\n          s.id === currentSessionId ? { ...s, messages: [...s.messages, fallback] } : s\r\n        )\r\n      );\r\n    }\r\n\r\n    setTyping(false);\r\n  };\r\n\r\n  const renderMessagesWithAudio = () => {\r\n    return currentSession?.messages.map((msg, index) => (\r\n      <MessageBubble\r\n        key={index}\r\n        msg={msg}\r\n        voices={voices}\r\n        defaultVoice={selectedVoice}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className={`chatbot-container ${darkMode ? 'dark' : ''}`}>\r\n      <Sidebar\r\n        onSelect={(val) => {\r\n          setView(val);\r\n          setSelectedTask(null);\r\n        }}\r\n        selected={view}\r\n      />\r\n\r\n      <button\r\n        className={`sidebar-toggle ${sidebarOpen ? 'sidebar-open' : 'sidebar-closed'}`}\r\n        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n      >\r\n        {sidebarOpen ? '⬅️' : '➡️'}\r\n      </button>\r\n\r\n      <div className={`main-content ${sidebarOpen ? '' : 'expanded'}`}>\r\n        <DarkModeToggle\r\n          darkMode={darkMode}\r\n          setDarkMode={setDarkMode}\r\n          sidebarOpen={sidebarOpen}\r\n        />\r\n\r\n        {view === 'chat' && (\r\n          <div className=\"chat-area\">\r\n            <div className=\"chat-box\" ref={chatBoxRef}>\r\n              {renderMessagesWithAudio()}\r\n              {typing && (\r\n                <div className=\"message ai\">\r\n                  <div className=\"bubble\">Typing...</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <ChatInput\r\n              input={input}\r\n              setInput={setInput}\r\n              onSend={sendMessage}\r\n              setMode={setMode}\r\n              onVoiceInput={(text) => setInput(text)}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {view === 'tasks' && (\r\n          <TaskPanel\r\n            mode={mode}\r\n            onClose={() => setView('chat')}\r\n            onTaskClick={(task) => setSelectedTask(task)}\r\n          />\r\n        )}\r\n\r\n        {view === 'journals' && !selectedTask && (\r\n          <JournalsPage onNew={() => setView('newJournal')} />\r\n        )}\r\n\r\n        {view === 'journals' && selectedTask && (\r\n          <JournalPanel task={selectedTask} onClose={() => setSelectedTask(null)} />\r\n        )}\r\n\r\n        {view === 'newJournal' && (\r\n          <JournalPanel task={{ title: '' }} onClose={() => setView('journals')} />\r\n        )}\r\n\r\n        {view === 'bookTherapist' && <BookTherapistPage />}\r\n        {view === 'sessionSummary' && <SessionSummaryPage />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,GAAG;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAACgB,YAAY,IAAID,MAAM,CAAC,CAAC,CAAC,CAAC;EAEvE,MAAMK,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACR,GAAG,CAACS,IAAI,CAAC;IACxDF,SAAS,CAACG,IAAI,GAAG,OAAO;IACxB,IAAIN,UAAU,EAAEG,SAAS,CAACI,KAAK,GAAGP,UAAU;IAC5CQ,eAAe,CAACC,KAAK,CAACN,SAAS,CAAC;EAClC,CAAC;EAED,oBACET,OAAA;IAAKgB,SAAS,EAAE,WAAWd,GAAG,CAACe,MAAM,EAAG;IAAAC,QAAA,gBACtClB,OAAA;MAAKgB,SAAS,EAAC,QAAQ;MAAAE,QAAA,EAAEhB,GAAG,CAACS;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACvCpB,GAAG,CAACe,MAAM,KAAK,IAAI,iBAClBjB,OAAA;MAAKuB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAM,CAAE;MAAAR,QAAA,gBACtElB,OAAA;QACEgB,SAAS,EAAC,cAAc;QACxBW,OAAO,EAAEnB,mBAAoB;QAC7BoB,KAAK,EAAE,WAAW,CAAAtB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEuB,IAAI,KAAI,eAAe,EAAG;QAAAX,QAAA,EACzD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtB,OAAA;QACEuB,KAAK,EAAE;UAAEO,UAAU,EAAE;QAAM,CAAE;QAC7BC,KAAK,EAAE,CAAAzB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEuB,IAAI,KAAI,EAAG;QAC9BG,QAAQ,EAAGC,CAAC,IAAK;UACf,MAAMpB,KAAK,GAAGV,MAAM,CAAC+B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACN,IAAI,KAAKI,CAAC,CAACG,MAAM,CAACL,KAAK,CAAC;UAC3D,IAAIlB,KAAK,EAAEN,aAAa,CAACM,KAAK,CAAC;QACjC,CAAE;QAAAK,QAAA,EAEDf,MAAM,CAACkC,GAAG,CAAC,CAACxB,KAAK,EAAEyB,GAAG,kBACrBtC,OAAA;UAAkB+B,KAAK,EAAElB,KAAK,CAACgB,IAAK;UAAAX,QAAA,GACjCL,KAAK,CAACgB,IAAI,EAAC,IAAE,EAAChB,KAAK,CAACD,IAAI,EAAC,GAC5B;QAAA,GAFa0B,GAAG;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxCIJ,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AA0CnB,MAAMuC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwD,QAAQ,EAAEC,WAAW,CAAC,GAAGzD,QAAQ,CAAC,CAAC;IAAE0D,EAAE,EAAE,CAAC;IAAEjB,IAAI,EAAE,WAAW;IAAEkB,QAAQ,EAAE;EAAG,CAAC,CAAC,CAAC;EACtF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG7D,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAAC8D,WAAW,EAAEC,cAAc,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgE,IAAI,EAAEC,OAAO,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkE,QAAQ,EAAEC,WAAW,CAAC,GAAGnE,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACoE,MAAM,EAAEC,SAAS,CAAC,GAAGrE,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACsE,YAAY,EAAEC,eAAe,CAAC,GAAGvE,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACwE,IAAI,EAAEC,OAAO,CAAC,GAAGzE,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAM,CAAC0E,WAAW,EAAEC,cAAc,CAAC,GAAG3E,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,MAAM,EAAE6D,SAAS,CAAC,GAAG5E,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC6E,aAAa,EAAEC,gBAAgB,CAAC,GAAG9E,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM+E,UAAU,GAAG7E,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM8E,cAAc,GAAGxB,QAAQ,CAACV,IAAI,CAAEmC,CAAC,IAAKA,CAAC,CAACvB,EAAE,KAAKE,gBAAgB,CAAC;EAEtE3D,SAAS,CAAC,MAAM;IAAA,IAAAiF,mBAAA;IACd,CAAAA,mBAAA,GAAAH,UAAU,CAACI,OAAO,cAAAD,mBAAA,uBAAlBA,mBAAA,CAAoBE,QAAQ,CAAC;MAAEC,GAAG,EAAEN,UAAU,CAACI,OAAO,CAACG,YAAY;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC5F,CAAC,EAAE,CAACP,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAErB,QAAQ,EAAES,MAAM,CAAC,CAAC;;EAEtC;EACAnE,SAAS,CAAC,MAAM;IACd,MAAMuF,UAAU,GAAGA,CAAA,KAAM;MACvB,MAAMC,eAAe,GAAGC,MAAM,CAAChE,eAAe,CAACiE,SAAS,CAAC,CAAC;MAC1Df,SAAS,CAACa,eAAe,CAAC;MAE1B,MAAMzE,YAAY,GAAGyE,eAAe,CAAC3C,IAAI,CAAErB,KAAK,IAC9CA,KAAK,CAACgB,IAAI,CAACmD,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,SAAS,CAAC,IAC5CpE,KAAK,CAACgB,IAAI,CAACmD,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC,IAC1CpE,KAAK,CAACgB,IAAI,CAACmD,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,cAAc,CAAC,IACjDpE,KAAK,CAACgB,IAAI,CAACmD,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,iBAAiB,CACrD,CAAC;MACD,IAAI7E,YAAY,EAAE8D,gBAAgB,CAAC9D,YAAY,CAAC;IAClD,CAAC;IAEDwE,UAAU,CAAC,CAAC;IACZ,IAAI,OAAOE,MAAM,KAAK,WAAW,EAAE;MACjCA,MAAM,CAAChE,eAAe,CAACoE,eAAe,GAAGN,UAAU;IACrD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACzC,KAAK,CAAC0C,IAAI,CAAC,CAAC,EAAE;IAEnB,MAAMC,WAAW,GAAG;MAAEpE,MAAM,EAAE,IAAI;MAAEN,IAAI,EAAE+B;IAAM,CAAC;IACjDC,QAAQ,CAAC,EAAE,CAAC;IACZE,WAAW,CAAEyC,IAAI,IACfA,IAAI,CAACjD,GAAG,CAAEgC,CAAC,IACTA,CAAC,CAACvB,EAAE,KAAKE,gBAAgB,GAAG;MAAE,GAAGqB,CAAC;MAAEtB,QAAQ,EAAE,CAAC,GAAGsB,CAAC,CAACtB,QAAQ,EAAEsC,WAAW;IAAE,CAAC,GAAGhB,CACjF,CACF,CAAC;IAED,IAAI,CAACnB,WAAW,EAAEC,cAAc,CAAC,IAAI,CAAC;IACtCM,SAAS,CAAC,IAAI,CAAC;IAEf,IAAI;MACF,MAAM8B,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAEpD,KAAK;UAAEU;QAAK,CAAC;MAC/C,CAAC,CAAC;MAEF,IAAI,CAACmC,QAAQ,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;MAEjD,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClC,MAAMC,SAAS,GAAG;QAAElF,MAAM,EAAE,IAAI;QAAEN,IAAI,EAAEsF,IAAI,CAACG;MAAM,CAAC;MAEpDvD,WAAW,CAAEyC,IAAI,IACfA,IAAI,CAACjD,GAAG,CAAEgC,CAAC,IACTA,CAAC,CAACvB,EAAE,KAAKE,gBAAgB,GAAG;QAAE,GAAGqB,CAAC;QAAEtB,QAAQ,EAAE,CAAC,GAAGsB,CAAC,CAACtB,QAAQ,EAAEoD,SAAS;MAAE,CAAC,GAAG9B,CAC/E,CACF,CAAC;IACH,CAAC,CAAC,OAAOgC,GAAG,EAAE;MACZ,MAAMC,QAAQ,GAAG;QACfrF,MAAM,EAAE,IAAI;QACZN,IAAI,EAAE;MACR,CAAC;MACDkC,WAAW,CAAEyC,IAAI,IACfA,IAAI,CAACjD,GAAG,CAAEgC,CAAC,IACTA,CAAC,CAACvB,EAAE,KAAKE,gBAAgB,GAAG;QAAE,GAAGqB,CAAC;QAAEtB,QAAQ,EAAE,CAAC,GAAGsB,CAAC,CAACtB,QAAQ,EAAEuD,QAAQ;MAAE,CAAC,GAAGjC,CAC9E,CACF,CAAC;IACH;IAEAZ,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,MAAM8C,uBAAuB,GAAGA,CAAA,KAAM;IACpC,OAAOnC,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAErB,QAAQ,CAACV,GAAG,CAAC,CAACnC,GAAG,EAAEsG,KAAK,kBAC7CxG,OAAA,CAACC,aAAa;MAEZC,GAAG,EAAEA,GAAI;MACTC,MAAM,EAAEA,MAAO;MACfC,YAAY,EAAE6D;IAAc,GAHvBuC,KAAK;MAAArF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF,CAAC;EACJ,CAAC;EAED,oBACEtB,OAAA;IAAKgB,SAAS,EAAE,qBAAqBsC,QAAQ,GAAG,MAAM,GAAG,EAAE,EAAG;IAAApC,QAAA,gBAC5DlB,OAAA,CAACT,OAAO;MACNkH,QAAQ,EAAGC,GAAG,IAAK;QACjB7C,OAAO,CAAC6C,GAAG,CAAC;QACZ/C,eAAe,CAAC,IAAI,CAAC;MACvB,CAAE;MACFgD,QAAQ,EAAE/C;IAAK;MAAAzC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eAEFtB,OAAA;MACEgB,SAAS,EAAE,kBAAkB8C,WAAW,GAAG,cAAc,GAAG,gBAAgB,EAAG;MAC/EnC,OAAO,EAAEA,CAAA,KAAMoC,cAAc,CAAC,CAACD,WAAW,CAAE;MAAA5C,QAAA,EAE3C4C,WAAW,GAAG,IAAI,GAAG;IAAI;MAAA3C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eAETtB,OAAA;MAAKgB,SAAS,EAAE,gBAAgB8C,WAAW,GAAG,EAAE,GAAG,UAAU,EAAG;MAAA5C,QAAA,gBAC9DlB,OAAA,CAACF,cAAc;QACbwD,QAAQ,EAAEA,QAAS;QACnBC,WAAW,EAAEA,WAAY;QACzBO,WAAW,EAAEA;MAAY;QAAA3C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,EAEDsC,IAAI,KAAK,MAAM,iBACd5D,OAAA;QAAKgB,SAAS,EAAC,WAAW;QAAAE,QAAA,gBACxBlB,OAAA;UAAKgB,SAAS,EAAC,UAAU;UAAC4F,GAAG,EAAEzC,UAAW;UAAAjD,QAAA,GACvCqF,uBAAuB,CAAC,CAAC,EACzB/C,MAAM,iBACLxD,OAAA;YAAKgB,SAAS,EAAC,YAAY;YAAAE,QAAA,eACzBlB,OAAA;cAAKgB,SAAS,EAAC,QAAQ;cAAAE,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENtB,OAAA,CAACN,SAAS;UACRgD,KAAK,EAAEA,KAAM;UACbC,QAAQ,EAAEA,QAAS;UACnBkE,MAAM,EAAE1B,WAAY;UACpB9B,OAAO,EAAEA,OAAQ;UACjByD,YAAY,EAAGnG,IAAI,IAAKgC,QAAQ,CAAChC,IAAI;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,EAEAsC,IAAI,KAAK,OAAO,iBACf5D,OAAA,CAACL,SAAS;QACRyD,IAAI,EAAEA,IAAK;QACX2D,OAAO,EAAEA,CAAA,KAAMlD,OAAO,CAAC,MAAM,CAAE;QAC/BmD,WAAW,EAAGC,IAAI,IAAKtD,eAAe,CAACsD,IAAI;MAAE;QAAA9F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CACF,EAEAsC,IAAI,KAAK,UAAU,IAAI,CAACF,YAAY,iBACnC1D,OAAA,CAACH,YAAY;QAACqH,KAAK,EAAEA,CAAA,KAAMrD,OAAO,CAAC,YAAY;MAAE;QAAA1C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACpD,EAEAsC,IAAI,KAAK,UAAU,IAAIF,YAAY,iBAClC1D,OAAA,CAACJ,YAAY;QAACqH,IAAI,EAAEvD,YAAa;QAACqD,OAAO,EAAEA,CAAA,KAAMpD,eAAe,CAAC,IAAI;MAAE;QAAAxC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC1E,EAEAsC,IAAI,KAAK,YAAY,iBACpB5D,OAAA,CAACJ,YAAY;QAACqH,IAAI,EAAE;UAAErF,KAAK,EAAE;QAAG,CAAE;QAACmF,OAAO,EAAEA,CAAA,KAAMlD,OAAO,CAAC,UAAU;MAAE;QAAA1C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACzE,EAEAsC,IAAI,KAAK,eAAe,iBAAI5D,OAAA,CAACR,iBAAiB;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjDsC,IAAI,KAAK,gBAAgB,iBAAI5D,OAAA,CAACP,kBAAkB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACmB,GAAA,CAzKID,OAAO;AAAA2E,GAAA,GAAP3E,OAAO;AA2Kb,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAA4E,GAAA;AAAAC,YAAA,CAAA7E,EAAA;AAAA6E,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}